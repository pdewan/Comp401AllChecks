//START OF FILE: src/grail/singletonscreator.java
package grail;

import java.beans.PropertyChangeListener;

import grail.animations.fromJavaTeaching.ABroadcastingClearanceManager;
import grail.animations.fromJavaTeaching.BroadcastingClearanceManager;
import grail.collections.MoveCommandUndoer;
import grail.collections.MyTable;
import grail.graphics.BridgeScene;
import grail.interfaces.AvatarInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandInterpreterInterface;
import grail.interfaces.ParserInterface;
import grail.interfaces.ScannerBeanInterface;
import grail.interfaces.Table;
import grail.interfaces.Undoer;
import grail.interfaces.mvc.BridgeSceneControllerInterface;
import grail.interfaces.mvc.CommandInterpreterControllerInterface;
import grail.interfaces.mvc.CommandInterpreterViewInterface;
import grail.interfaces.mvc.DelegatingBridgeSceneViewInterface;
import grail.interfaces.mvc.PaintingViewMaster;
import grail.mvc.controller.BridgeSceneController;
import grail.mvc.controller.CommandInterpreterController;
import grail.mvc.view.CommandInterpreterView;
import grail.mvc.view.ConsoleSceneView;
import grail.mvc.view.DelegatingBridgeSceneView;
import grail.mvc.view.ObservableBridgeScenePainter;
import grail.scanner.CommandInterpreter;
import grail.scanner.Parser;
import grail.scanner.ScannerBean;
import util.annotations.Tags;

@Tags({"SingletonsCreator"})
public class SingletonsCreator {
	
}
//END OF FILE
//START OF FILE: src/grail/animations/animatingcommand.java
package grail.animations;

import grail.SingletonsCreator;
import grail.interfaces.AnimatorInterface;
import grail.interfaces.AvatarInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"AnimatingCommand"})
public class AnimatingCommand implements CommandThread{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}


}
//END OF FILE
//START OF FILE: src/grail/animations/animator.java
package grail.animations;

import grail.SingletonsCreator;
import grail.interfaces.AnimatorInterface;
import grail.interfaces.AvatarInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.RotatingLineInterface;
import util.annotations.Tags;
import util.misc.ThreadSupport;


@Tags({"Animator", "CoordinatingAnimator"})
public abstract class Animator implements AnimatorInterface {

}
//END OF FILE
//START OF FILE: src/grail/animations/clapcommand.java
package grail.animations;

import grail.interfaces.AnimatorInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;

public class ClapCommand implements CommandThread{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}


}
//END OF FILE
//START OF FILE: src/grail/animations/claplockstepcommand.java
package grail.animations;

import grail.interfaces.AnimatorInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"CoordinatingAnimatingCommand"})
public class ClapLockstepCommand implements CommandThread{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/animations/lockstepanimatingcommand.java
package grail.animations;

import grail.interfaces.AnimatorInterface;
import grail.interfaces.AvatarInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"CoordinatedAnimator"})
public class LockstepAnimatingCommand implements CommandThread {

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}


}
//END OF FILE
//START OF FILE: src/grail/animations/sleepbasedanimator.java
package grail.animations;

import grail.interfaces.AnimatorInterface;
import grail.interfaces.AvatarInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.RotatingLineInterface;
import util.annotations.Tags;
import util.misc.ThreadSupport;


@Tags({"Animator"})
public class SleepBasedAnimator extends Animator {

	@Override
	public void animateAvatar(AvatarInterface avatar) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void clapGuard(BridgeSceneInterface scene) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void clapGuardLockstep(BridgeSceneInterface scene) {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/animations/waitbasedanimator.java
package grail.animations;

import grail.SingletonsCreator;
import grail.animations.fromJavaTeaching.BroadcastingClearanceManager;
import grail.interfaces.AnimatorInterface;
import grail.interfaces.AvatarInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.RotatingLineInterface;
import util.annotations.Tags;
import util.misc.ThreadSupport;


@Tags({"CoordinatedAnimator"})
public class WaitBasedAnimator extends Animator {

	@Override
	public void animateAvatar(AvatarInterface avatar) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void clapGuard(BridgeSceneInterface scene) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void clapGuardLockstep(BridgeSceneInterface scene) {
		// TODO Auto-generated method stub
		
	}

	
}
//END OF FILE
//START OF FILE: src/grail/animations/fromjavateaching/abroadcastingclearancemanager.java
package grail.animations.fromJavaTeaching;

/**
 * Copied from JavaTeaching, as required from assignment
 */

import util.annotations.ComponentWidth;
import util.annotations.Row;

public class ABroadcastingClearanceManager extends AClearanceManager 
					implements BroadcastingClearanceManager {

	@Row(1)
	@ComponentWidth(100)
	public synchronized void proceedAll() {
		notifyAll(); // not notify, hover over the method and see Java's explanation for it		
	}
}
//END OF FILE
//START OF FILE: src/grail/animations/fromjavateaching/aclearancemanager.java
package grail.animations.fromJavaTeaching;

/**
 * Copied from JavaTeaching, as required by assignment
 */

import java.beans.PropertyChangeListener;

import util.annotations.ComponentWidth;
import util.annotations.Row;
import util.models.AListenableVector;
import util.models.ListenableVector;
import bus.uigen.ObjectEditor;

/*
 Does the println after notify ever not follow the println before notify?
 Does the println after wait ever not follow the println before wait?
 Does the wait ended message ever not follow wait started?
 Does the same thread ever execute both wait and notify?
 */
public class AClearanceManager implements ClearanceManager {
	ListenableVector waitingThreads = new AListenableVector<>();
	PropertyListenerSupport propertyListenerSupport = new APropertyListenerSupport();
	@Row(0)
	@ComponentWidth(100)
	public synchronized void proceed() {
		System.out.println( Thread.currentThread() + ": before notify");
		notify(); // Defined in call Object. Hover over it to see its explanation. Think of a monitor as simply an object.
		System.out.println( Thread.currentThread() + ": after notify");
	}
	public 
//		 Comment out the synchronized keyword. What error do you get? 
		synchronized 
			void waitForProceed() {
			try {
				String aThreadID = Thread.currentThread().toString();
				System.out.println( aThreadID + ": before wait");
				waitingThreads.addElement(aThreadID);
				wait(); // Defined in call Object. Hover over it to see its explanation. Think of a monitor as simply an object.
				System.out.println( aThreadID + ": after wait");
				waitingThreads.removeElement(aThreadID);
			} catch (Exception e) {
				e.printStackTrace();
			}
//		}
	}
	@Row(2)
	public ListenableVector getWaitingThreads() {
		return waitingThreads;

	}
	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		propertyListenerSupport.add(arg0);
	}

}
//END OF FILE
//START OF FILE: src/grail/animations/fromjavateaching/apropertylistenersupport.java
package grail.animations.fromJavaTeaching;

/**
 * Copied from JavaTeaching, as required by assignment
 */

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

public class APropertyListenerSupport implements PropertyListenerSupport {
	public final int MAX_SIZE = 50;
	
	// Here we see an array that is capable of storing listeners. Each observer will
	// register a listener with an observable.
	PropertyChangeListener[] contents = new PropertyChangeListener[MAX_SIZE];
	int size = 0;

	public int size() {
		return size;
	}
	
	public PropertyChangeListener get (int index) {
		return contents[index];
	}

	public boolean isFull() {
		return size == MAX_SIZE;

	}

	public void add(PropertyChangeListener l) {
		if (isFull())
			System.out.println("Adding item to a full collection");
		else {
			contents[size] = l;
			size++;
		}
	}
	
	/**
	 * The method notifyAllListeners calls propertyChange():
	 *  (a) a single time on one of the registered observers.
	 *  (b) once for each registered observer.
	 *  (c) never.
	 *  
	 * The method propertyChange is:
	 *  (a) a notification method invoked on a registered observer.
	 *  (b) a registration method invoked on an observer.
	 *  (c) a setter invoked on an observer.
	 */
	public void notifyAllListeners(PropertyChangeEvent event) {
		for (int index = 0; index < size(); index++) {
			/*
			 * Hover over propertyChange to see its documentation
			 * Hover over event to see its instance variables
			 * What kind of object does get(index) return?
			 */
			get(index).propertyChange(event);
		}
	}
	public void remove(PropertyChangeListener element) {
		contents[indexOf(element)] = contents[size - 1];
		size--;
	}

	public void remove(int startIndex) {
		shiftUp(startIndex);
		size--;
	}

	void shiftUp(int startIndex) {
		for (int index = startIndex; index + 1 < size; index++)
			contents[index] = contents[index + 1];
	}

	public int indexOf(PropertyChangeListener element) {
		int index;
		for (index = 0; index < size && !element.equals(contents[index]); index++)
			;
		return index;
	}

	public boolean member(PropertyChangeListener element) {
		return indexOf(element) < size;

	}

	public void clear() {
		size = 0;
	}
}
//END OF FILE
//START OF FILE: src/grail/animations/fromjavateaching/broadcastingclearancemanager.java
package grail.animations.fromJavaTeaching;

public interface BroadcastingClearanceManager extends ClearanceManager {
	public void proceedAll();

}
//END OF FILE
//START OF FILE: src/grail/animations/fromjavateaching/clearancemanager.java
package grail.animations.fromJavaTeaching;

import util.models.PropertyListenerRegisterer;

public interface ClearanceManager extends PropertyListenerRegisterer{
	public void proceed();
	public void waitForProceed();	
	

}
//END OF FILE
//START OF FILE: src/grail/animations/fromjavateaching/propertylistenersupport.java
package grail.animations.fromJavaTeaching;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

public interface PropertyListenerSupport {
	public void add(PropertyChangeListener l);
	public PropertyChangeListener get(int index); 
	public int size();
	public void notifyAllListeners(PropertyChangeEvent event);
	public void remove(PropertyChangeListener element) ;
	public void remove(int startIndex) ;
	public int indexOf(PropertyChangeListener element);
	public boolean member(PropertyChangeListener element);
}
//END OF FILE
//START OF FILE: src/grail/collections/abasehistory.java
package grail.collections;

import grail.interfaces.BaseHistory;
import grail.interfaces.Token;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.VECTOR_PATTERN)
public class ABaseHistory implements BaseHistory {

	@Override
	public void addElement(Token element) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Token elementAt(int index) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}
	
	
}
//END OF FILE
//START OF FILE: src/grail/collections/clearablehistory.java
package grail.collections;

import grail.interfaces.ClearableHistoryInterface;
import grail.interfaces.Token;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.VECTOR_PATTERN)
@Tags({"ClearableHistory"})
public class ClearableHistory extends ABaseHistory implements ClearableHistoryInterface {

	@Override
	public void clear() {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/collections/movecommandundoer.java
package grail.collections;

import java.util.ArrayList;
import java.util.List;

import grail.interfaces.CommandThread;
import grail.interfaces.UndoableCommandThread;
import grail.interfaces.Undoer;
import grail.scanner.commands.MoveCommand;

public class MoveCommandUndoer implements Undoer {

	@Override
	public void execute(UndoableCommandThread c) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void undo() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void redo() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void clear() {
		// TODO Auto-generated method stub
		
	}


}
//END OF FILE
//START OF FILE: src/grail/collections/mytable.java
package grail.collections;

import java.util.ArrayList;
import java.util.List;

import grail.interfaces.Table;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.MAP_PATTERN)
@Tags({"Table"})
public class MyTable<KeyType> implements Table<KeyType> {

	@Override
	public void put(String key, KeyType val) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public KeyType get(String key) {
		// TODO Auto-generated method stub
		return null;
	}
	
	
}//end class
//END OF FILE
//START OF FILE: src/grail/graphics/avatar.java
package grail.graphics;

import java.beans.PropertyChangeListener;

import grail.interfaces.AvatarInterface;
import grail.interfaces.ImageInterface;
import grail.interfaces.RotatingLineInterface;
import grail.interfaces.StringShapeInterface;
import grail.interfaces.VShapeInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags({"Avatar"})
@PropertyNames({"X", "Y","Head", "Legs", "Arms", "Torso", "StringShape"})
@EditablePropertyNames({"X", "Y"})
public class Avatar extends LocatableObject implements AvatarInterface {

	@Override
	public void setX(int newX) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setY(int newY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getY() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public StringShapeInterface getStringShape() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ImageInterface getHead() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public VShapeInterface getArms() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public VShapeInterface getLegs() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public RotatingLineInterface getTorso() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void move(int changeInX, int changeInY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void scale(double scalar) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addPropertyChangeListenerToAtomics(PropertyChangeListener listener) {
		// TODO Auto-generated method stub
		
	}
	
}
//END OF FILE
//START OF FILE: src/grail/graphics/boundedshape.java
package grail.graphics;

import java.beans.PropertyChangeEvent;

import grail.interfaces.BoundedShapeInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"X", "Y", "Width", "Height"})
@EditablePropertyNames({"X", "Y", "Width", "Height"})
@Tags({"BoundedShape"})
public abstract class BoundedShape extends ObservableLocatableObject implements BoundedShapeInterface {

}
//END OF FILE
//START OF FILE: src/grail/graphics/bridgescene.java
package grail.graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import grail.interfaces.AvatarInterface;
import grail.interfaces.BoundedShapeInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.GorgeWithBridgeInterface;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags({"BridgeScene"})
@PropertyNames({"Guard", "Arthur", "Lancelot","Robin", "Galahad",
	"Gorge", "GuardArea", "KnightArea", "Occupied", "KnightTurn"})
public class BridgeScene implements BridgeSceneInterface {

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public AvatarInterface getArthur() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public AvatarInterface getLancelot() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public AvatarInterface getRobin() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public AvatarInterface getGalahad() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public AvatarInterface getGuard() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public GorgeWithBridgeInterface getGorge() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public BoundedShapeInterface getKnightArea() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public BoundedShapeInterface getGuardArea() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void approach(AvatarInterface knight) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void say(String string) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void passed() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void failed() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean getOccupied() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean getKnightTurn() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void scroll(int scrollAmount, int i) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public boolean preFailed() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean prePassed() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean preSay() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean preApproach() {
		// TODO Auto-generated method stub
		return false;
	}

}
//END OF FILE
//START OF FILE: src/grail/graphics/gorgewithbridge.java
package grail.graphics;

import grail.interfaces.GorgeWithBridgeInterface;
import grail.interfaces.BoundedShapeInterface;
import grail.interfaces.RotatingLineInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"LeftSide", "RightSide", "Bridge", "LeftX", "RightX", "UpperY", "BridgeWidth", "GorgeLength"})
@EditablePropertyNames({"LeftX", "RightX", "UpperY", "BridgeWidth", "GorgeLength"})
public class GorgeWithBridge implements GorgeWithBridgeInterface {

	@Override
	public RotatingLineInterface getLeftSide() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public RotatingLineInterface getRightSide() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public BoundedShapeInterface getBridge() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getUpperY() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setUpperY(int y) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getLeftX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setLeftX(int x) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getRightX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setRightX(int x) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getBridgeWidth() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setBridgeWidth(int width) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getGorgeLength() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setGorgeLength(int length) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void move(int moveX, int moveY) {
		// TODO Auto-generated method stub
		
	}
	
}
//END OF FILE
//START OF FILE: src/grail/graphics/image.java
package grail.graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.Icon;
import javax.swing.ImageIcon;

import grail.interfaces.ImageInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.IMAGE_PATTERN)
@PropertyNames({"X", "Y", "Width", "Height", "ImageFileName"})
@EditablePropertyNames({"X", "Y", "Width", "Height", "ImageFileName"})
public class Image extends Rectangle implements ImageInterface {

	@Override
	public void setWidth(int newWidth) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getWidth() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setHeight(int newHeight) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getHeight() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void move(int moveX, int moveY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setX(int newX) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setY(int newY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getY() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setImageFileName(String imageFileName) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public String getImageFileName() {
		// TODO Auto-generated method stub
		return null;
	}

}
//END OF FILE
//START OF FILE: src/grail/graphics/locatableobject.java
package grail.graphics;

import grail.interfaces.Locatable;

public abstract class LocatableObject implements Locatable{

}
//END OF FILE
//START OF FILE: src/grail/graphics/observablelocatableobject.java
package grail.graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import grail.interfaces.ObservableLocatable;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"X", "Y"})
@EditablePropertyNames({"X", "Y"})
@Tags({"Locatable"})
public abstract class ObservableLocatableObject extends LocatableObject implements ObservableLocatable{

}
//END OF FILE
//START OF FILE: src/grail/graphics/oval.java
package grail.graphics;

import java.beans.PropertyChangeListener;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.OVAL_PATTERN)
@PropertyNames({"X", "Y", "Width", "Height"})
@EditablePropertyNames({"X", "Y", "Width", "Height"})
public class Oval extends BoundedShape{

	@Override
	public void setWidth(int newWidth) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getWidth() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setHeight(int newHeight) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getHeight() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void move(int moveX, int moveY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setX(int newX) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setY(int newY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getY() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		// TODO Auto-generated method stub
		
	}
	
}
//END OF FILE
//START OF FILE: src/grail/graphics/rectangle.java
package grail.graphics;

import java.beans.PropertyChangeListener;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.RECTANGLE_PATTERN)
@PropertyNames({"X", "Y", "Width", "Height"})
@EditablePropertyNames({"X", "Y", "Width", "Height"})
public class Rectangle extends BoundedShape {

	@Override
	public void setWidth(int newWidth) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getWidth() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setHeight(int newHeight) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getHeight() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void move(int moveX, int moveY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setX(int newX) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setY(int newY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getY() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		// TODO Auto-generated method stub
		
	}


}
//END OF FILE
//START OF FILE: src/grail/graphics/rotatingline.java
package grail.graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import grail.interfaces.RotatingLineInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"RotatingLine"})
@StructurePattern(StructurePatternNames.LINE_PATTERN)
@PropertyNames({"Height", "Width", "X", "Y","Angle", "Radius"})
@EditablePropertyNames({"X", "Y","Angle", "Radius"})
public class RotatingLine extends BoundedShape implements RotatingLineInterface{

	@Override
	public void setWidth(int newWidth) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getWidth() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setHeight(int newHeight) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getHeight() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void move(int moveX, int moveY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setX(int newX) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setY(int newY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getY() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setRadius(double r) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public double getRadius() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setAngle(double theta) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public double getAngle() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void rotateByClockwiseDegrees(int degrees) {
		// TODO Auto-generated method stub
		
	}
	

}
//END OF FILE
//START OF FILE: src/grail/graphics/stringshape.java
package grail.graphics;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import grail.interfaces.StringShapeInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.STRING_PATTERN)
@PropertyNames({"X", "Y", "Text"})
@EditablePropertyNames({"X", "Y", "Text"})
public class StringShape extends ObservableLocatableObject implements StringShapeInterface {

	@Override
	public void setX(int newX) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setY(int newY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getY() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setText(String newString) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public String getText() {
		// TODO Auto-generated method stub
		return null;
	}


}
//END OF FILE
//START OF FILE: src/grail/graphics/vshape.java
package grail.graphics;

import java.beans.PropertyChangeListener;

import grail.interfaces.RotatingLineInterface;
import grail.interfaces.VShapeInterface;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import util.annotations.Visible;

@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@Tags({"Angle"})
@PropertyNames({"X", "Y","LeftLine", "RightLine", "LinesLength"})
@EditablePropertyNames({"X", "Y", "LinesLength"})
public class VShape extends LocatableObject implements VShapeInterface {

	@Override
	public void setX(int newX) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getX() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setY(int newY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public int getY() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public RotatingLineInterface getLeftLine() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public RotatingLineInterface getRightLine() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public double getLinesLength() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public void setLinesLength(double newLength) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void move(int changeInX, int changeInY) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addPropertyChangeListenerToAtomics(PropertyChangeListener listener) {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/interfaces/animatorinterface.java
package grail.interfaces;

import util.annotations.Tags;

@Tags({"Animator"})
public interface AnimatorInterface {
	
	@Tags({"animateAvatar"})
	public void animateAvatar(AvatarInterface avatar);
	
	public void clapGuard(BridgeSceneInterface scene);
	public void clapGuardLockstep(BridgeSceneInterface scene);
}
//END OF FILE
//START OF FILE: src/grail/interfaces/avatarinterface.java
package grail.interfaces;

import java.beans.PropertyChangeListener;

import util.annotations.Tags;

@Tags({"Avatar", "move"})
public interface AvatarInterface extends Locatable{
	
	public StringShapeInterface getStringShape();
	
	public ImageInterface getHead();
	
	public VShapeInterface getArms();
	
	public VShapeInterface getLegs();
	
	public RotatingLineInterface getTorso();
	
	public void move(int changeInX, int changeInY);
	public void scale(double scalar);

	void addPropertyChangeListenerToAtomics(PropertyChangeListener listener);
}
//END OF FILE
//START OF FILE: src/grail/interfaces/basehistory.java
package grail.interfaces;

public interface BaseHistory {
	public void addElement(Token element);
	public Token elementAt (int index); 
	public int size();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/boundedshapeinterface.java
package grail.interfaces;

import util.annotations.Tags;

@Tags({"BoundedShape"})
public interface BoundedShapeInterface extends ObservableLocatable{

	public void setWidth(int newWidth);
	public int getWidth();
	
	public void setHeight(int newHeight);
	public int getHeight();
	
	@Tags({"move"})
	public void move(int moveX, int moveY);
}
//END OF FILE
//START OF FILE: src/grail/interfaces/bridgesceneinterface.java
package grail.interfaces;

import util.annotations.Tags;
import util.models.PropertyListenerRegisterer;

@Tags({"BridgeScene"})
public interface BridgeSceneInterface extends PropertyListenerRegisterer{
	public AvatarInterface getArthur();
	public AvatarInterface getLancelot();
	public AvatarInterface getRobin();
	public AvatarInterface getGalahad();
	public AvatarInterface getGuard();
	
	public GorgeWithBridgeInterface getGorge();
	public BoundedShapeInterface getKnightArea();
	public BoundedShapeInterface getGuardArea();
	
	@Tags({"approach"})
	public void approach(AvatarInterface knight);
	
	@Tags({"say"})
	public void say(String string);
	
	@Tags({"passed"})
	public void passed();
	
	@Tags({"failed"})
	public void failed();
	public boolean getOccupied();
	public boolean getKnightTurn();
	
	@Tags({"scroll"})
	public void scroll(int scrollAmount, int i);
	
	public boolean preFailed();
	public boolean prePassed();
	public boolean preSay();
	public boolean preApproach();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/clearablehistoryinterface.java
package grail.interfaces;

import util.annotations.Tags;

@Tags({"ClearableHistory"})
public interface ClearableHistoryInterface extends BaseHistory {
	public void clear();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/commandinterpreterinterface.java
package grail.interfaces;

import java.beans.PropertyChangeListener;

import util.annotations.Tags;

@Tags({"CommandInterpreter", "SignedMoveCommandInterpreter", "ErrorResilientCommandInterpreter","ObservableCommandInterpreter"})
public interface CommandInterpreterInterface {

	public String getCommand();
	public void setCommand(String command);

	public String getErrors();
	public void addPropertyChangeListener(PropertyChangeListener listener);
	
	@Tags({"asynchronousArthur"})
	public void animateArthur();
	
	@Tags({"asynchronousGalahad"})
	public void animateGalahad();
	
	@Tags({"asynchronousLancelot"})
	public void animateLancelot();
	
	@Tags({"asynchronousRobin"})
	public void animateRobin();
	
	@Tags({"asynchronousGuard"})
	public void clapGuard();
	
	@Tags({"waitingArthur"})
	public void animateArthurWithWait();
	
	@Tags({"waitingGalahad"})
	public void animateGalahadWithWait();
	
	@Tags({"waitingLancelot"})
	public void animateLancelotWithWait();
	
	@Tags({"waitingRobin"})
	public void animateRobinWithWait();
	
	@Tags({"startAnimation"})
	public void startAnimation();

	@Tags({"lockstepArthur"})
	public void animateArthurWithLockstep();
	
	@Tags({"lockstepGalahad"})
	public void animateGalahadWithLockstep();
	
	@Tags({"lockstepLancelot"})
	public void animateLancelotWithLockstep();
	
	@Tags({"lockstepRobin"})
	public void animateRobinWithLockstep();
	
	@Tags({"lockstepGuard"})
	public void clapGuardLockstep();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/commandthread.java
package grail.interfaces;

public interface CommandThread extends Runnable{

}
//END OF FILE
//START OF FILE: src/grail/interfaces/compositecommandthread.java
package grail.interfaces;

public interface CompositeCommandThread extends CommandThread{
	public void add(Runnable r);
}
//END OF FILE
//START OF FILE: src/grail/interfaces/gorgewithbridgeinterface.java
package grail.interfaces;


public interface GorgeWithBridgeInterface {

	public RotatingLineInterface getLeftSide();
	public RotatingLineInterface getRightSide();
	public BoundedShapeInterface getBridge();

	public int getUpperY();
	public void setUpperY(int y);

	public int getLeftX();
	public void setLeftX(int x);

	public int getRightX();
	public void setRightX(int x);

	public int getBridgeWidth();
	public void setBridgeWidth(int width);

	public int getGorgeLength();
	public void setGorgeLength(int length);
	
	public void move(int moveX, int moveY);
}
//END OF FILE
//START OF FILE: src/grail/interfaces/imageinterface.java
package grail.interfaces;

import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.IMAGE_PATTERN)
public interface ImageInterface extends BoundedShapeInterface{
	public void setImageFileName(String imageFileName);
	public String getImageFileName();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/locatable.java
package grail.interfaces;

import util.annotations.Tags;

@Tags({"Locatable"})
public interface Locatable {
	
	public void setX(int newX);
	public int getX();

	public void setY(int newY);
	public int getY();
	
}
//END OF FILE
//START OF FILE: src/grail/interfaces/number.java
package grail.interfaces;

import util.annotations.Tags;

@Tags({"Number"})
public interface Number extends Token {
	public int getValue();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/observablelocatable.java
package grail.interfaces;

import util.models.PropertyListenerRegisterer;

public interface ObservableLocatable extends Locatable, PropertyListenerRegisterer{

}
//END OF FILE
//START OF FILE: src/grail/interfaces/parserinterface.java
package grail.interfaces;

import util.annotations.Tags;

@Tags({"Parser"})
public interface ParserInterface {

	public String getCommandText();
	public void setCommandText(String string);
	public CommandThread getCommandObject();
	public String getErrors();

}
//END OF FILE
//START OF FILE: src/grail/interfaces/parsingexceptioninterface.java
package grail.interfaces;

import util.annotations.Tags;

/**
 * Only exists to fulfill requirements regarding public methods being
 * in interfaces
 *
 */
@Tags({"ParsingException"})
public interface ParsingExceptionInterface {

	public String getExpected();
	public String getEncountered();

}
//END OF FILE
//START OF FILE: src/grail/interfaces/rotatinglineinterface.java
package grail.interfaces;

import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.LINE_PATTERN)
@Tags({"RotatingLine"})
public interface RotatingLineInterface extends BoundedShapeInterface{

	public void setRadius(double r);
	public double getRadius();
	
	public void setAngle(double theta);
	public double getAngle();
	
	@Tags({"rotate"})
	public void rotateByClockwiseDegrees(int degrees);
}
//END OF FILE
//START OF FILE: src/grail/interfaces/scannerbeaninterface.java
package grail.interfaces;

import grail.scanner.ScanningException;
import util.annotations.Tags;

@Tags({"ScannerBean"})
public interface ScannerBeanInterface {
	public String getScannedString();
	public void setScannedString(String s) throws ScanningException;
	public Token[] getTokens();
	public String[] getErrors();
	public ClearableHistoryInterface getTokenList();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/scanningexceptioninterface.java
package grail.interfaces;

/**
 * Only exists to fulfill requirements regarding public methods being
 * in interfaces
 *
 */
public interface ScanningExceptionInterface {

	public String[] getErrors();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/stringshapeinterface.java
package grail.interfaces;

import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;

@StructurePattern(StructurePatternNames.STRING_PATTERN)
public interface StringShapeInterface extends ObservableLocatable{
	
	public void setText(String newString);
	public String getText();
	
}
//END OF FILE
//START OF FILE: src/grail/interfaces/table.java
package grail.interfaces;

import util.annotations.Tags;

@Tags({"Table"})
public interface Table<KeyType> {

	public void put(String key, KeyType val);
	public KeyType get(String key);

}
//END OF FILE
//START OF FILE: src/grail/interfaces/token.java
package grail.interfaces;

import util.annotations.Tags;

@Tags({"Token", "Number", "Word", "Quote", "Plus", "Minus", "Start", "End"})
public interface Token {
	
	public void setInput(String newString);
	public String getInput();

}
//END OF FILE
//START OF FILE: src/grail/interfaces/undoablecommandthread.java
package grail.interfaces;

public interface UndoableCommandThread extends CommandThread {
	public void undo();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/undoer.java
package grail.interfaces;

public interface Undoer {
	public void execute(UndoableCommandThread c);
	public void undo();
	public void redo();
	public void clear();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/vshapeinterface.java
package grail.interfaces;

import java.beans.PropertyChangeListener;

import util.annotations.Tags;

@Tags({"Angle", "move"})
public interface VShapeInterface extends Locatable{
	
	public RotatingLineInterface getLeftLine();
	public RotatingLineInterface getRightLine();
	
	public double getLinesLength();
	public void setLinesLength(double newLength);
	
	@Tags({"move"})
	public void move(int changeInX, int changeInY);
	
	void addPropertyChangeListenerToAtomics(PropertyChangeListener listener);
}
//END OF FILE
//START OF FILE: src/grail/interfaces/word.java
package grail.interfaces;
import util.annotations.Tags;

@Tags({"Word"})
public interface Word extends Token {
	public String getValue();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/mvc/bridgescenecontrollerinterface.java
package grail.interfaces.mvc;

import java.awt.event.KeyListener;
import java.awt.event.MouseListener;

import util.annotations.Tags;

@Tags({"BridgeSceneController"})
public interface BridgeSceneControllerInterface extends MouseListener, KeyListener {

}
//END OF FILE
//START OF FILE: src/grail/interfaces/mvc/commandinterpretercontrollerinterface.java
package grail.interfaces.mvc;

import java.awt.event.ActionListener;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;
import javax.swing.JMenuItem;
import javax.swing.JTextField;

import util.annotations.Tags;

@Tags({"CommandInterpreterController"})
public interface CommandInterpreterControllerInterface extends ActionListener, PropertyChangeListener{
	public JTextField getTextField();
	public JButton getSay();
	public JButton getPass();
	public JButton getFail();
	public JButton getApproach();
	public JButton getButton();
	public JMenuItem getMenuItem();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/mvc/commandinterpreterviewinterface.java
package grail.interfaces.mvc;

import java.awt.event.ActionListener;
import java.beans.PropertyChangeListener;

import javax.swing.JButton;
import javax.swing.JMenuItem;
import javax.swing.JTextField;

import util.annotations.Tags;

@Tags({"CommandInterpreterView"})
public interface CommandInterpreterViewInterface extends PropertyChangeListener {
	public void addControllerListener(ActionListener listener);
	public JTextField getTextField();
	public JButton getSay();
	public JButton getApproach();
	public JButton getFail();
	public JButton getPass();
	public JButton getButton();
	public JMenuItem getMenuItem();
}
//END OF FILE
//START OF FILE: src/grail/interfaces/mvc/delegatingbridgesceneviewinterface.java
package grail.interfaces.mvc;

import util.annotations.Tags;

@Tags({"DelegatingBridgeSceneView"})
public interface DelegatingBridgeSceneViewInterface {

}
//END OF FILE
//START OF FILE: src/grail/interfaces/mvc/paintlistener.java
package grail.interfaces.mvc;

import java.awt.Graphics2D;
import java.beans.PropertyChangeListener;

import util.annotations.Tags;

@Tags({"PaintListener"})
public interface PaintListener extends PropertyChangeListener{
	void paint(Graphics2D g);
}
//END OF FILE
//START OF FILE: src/grail/interfaces/mvc/paintingviewmaster.java
package grail.interfaces.mvc;

import util.annotations.Tags;

@Tags({"ObservableBridgeScenePainter"})
public interface PaintingViewMaster{
	public void addPaintListener(PaintListener listener);
	public void repaint();
}
//END OF FILE
//START OF FILE: src/grail/mvc/controller/bridgescenecontroller.java
package grail.mvc.controller;

import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;

import grail.SingletonsCreator;
import grail.interfaces.AvatarInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.mvc.BridgeSceneControllerInterface;
import grail.interfaces.mvc.PaintingViewMaster;
import util.annotations.Tags;

@Tags({"BridgeSceneController"})
public class BridgeSceneController implements BridgeSceneControllerInterface{

	@Override
	public void mouseClicked(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mousePressed(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyPressed(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	
}
//END OF FILE
//START OF FILE: src/grail/mvc/controller/commandinterpretercontroller.java
package grail.mvc.controller;

import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;

import javax.swing.JButton;
import javax.swing.JMenuItem;
import javax.swing.JTextField;

import grail.SingletonsCreator;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandInterpreterInterface;
import grail.interfaces.mvc.CommandInterpreterViewInterface;
import grail.mvc.view.CommandInterpreterView;
import grail.interfaces.mvc.CommandInterpreterControllerInterface;
import util.annotations.PropertyNames;
import util.annotations.Tags;

@Tags({"CommandInterpreterController"})
@PropertyNames({"TextField", "Say", "Pass", "Fail", "Approach", "MenuItem", "Button"})
public class CommandInterpreterController implements CommandInterpreterControllerInterface {

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void propertyChange(PropertyChangeEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public JTextField getTextField() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getSay() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getPass() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getFail() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getApproach() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getButton() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JMenuItem getMenuItem() {
		// TODO Auto-generated method stub
		return null;
	}
	
}
//END OF FILE
//START OF FILE: src/grail/mvc/view/avatarview.java
package grail.mvc.view;

import java.awt.Graphics2D;
import java.beans.PropertyChangeEvent;

import grail.interfaces.AvatarInterface;
import grail.interfaces.mvc.PaintListener;
import grail.interfaces.mvc.PaintingViewMaster;
import util.annotations.Tags;

@Tags({"PaintListener"})
public class AvatarView implements PaintListener{

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void paint(Graphics2D g) {
		// TODO Auto-generated method stub
		
	}
	
}
//END OF FILE
//START OF FILE: src/grail/mvc/view/commandinterpreterview.java
package grail.mvc.view;

import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JTextField;

import grail.SingletonsCreator;
import grail.interfaces.CommandInterpreterInterface;
import grail.interfaces.mvc.CommandInterpreterViewInterface;
import util.annotations.PropertyNames;
import util.annotations.Tags;

@Tags({"CommandInterpreterView"})
@PropertyNames({"TextField", "ProgressBar", "Say", "Pass", "Fail", "Approach", "MenuItem", "Button"})
public class CommandInterpreterView extends JFrame implements CommandInterpreterViewInterface{

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addControllerListener(ActionListener listener) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public JTextField getTextField() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getSay() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getApproach() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getFail() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getPass() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JButton getButton() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JMenuItem getMenuItem() {
		// TODO Auto-generated method stub
		return null;
	}
	
}
//END OF FILE
//START OF FILE: src/grail/mvc/view/consolesceneview.java
package grail.mvc.view;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import grail.SingletonsCreator;
import grail.interfaces.BridgeSceneInterface;
import util.annotations.Tags;

@Tags({"ConsoleSceneView"})
public class ConsoleSceneView implements PropertyChangeListener{

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/mvc/view/customswingtextfieldfactory.java
package grail.mvc.view;

import javax.swing.JTextField;

import bus.uigen.widgets.VirtualTextField;
import bus.uigen.widgets.swing.SwingTextFieldFactory;
import util.annotations.Tags;

/**
 * Used for object editor
 * @author
 *
 */
@Tags({"CustomSwingTextFieldFactory"})
public class CustomSwingTextFieldFactory extends SwingTextFieldFactory {
	
}
//END OF FILE
//START OF FILE: src/grail/mvc/view/delegatingbridgesceneview.java
package grail.mvc.view;

import grail.SingletonsCreator;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.mvc.DelegatingBridgeSceneViewInterface;
import grail.interfaces.mvc.PaintingViewMaster;
import util.annotations.Tags;

@Tags({"DelegatingBridgeSceneView"})
public class DelegatingBridgeSceneView implements DelegatingBridgeSceneViewInterface{

	
}
//END OF FILE
//START OF FILE: src/grail/mvc/view/observablebridgescenepainter.java
package grail.mvc.view;

import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.List;

import grail.interfaces.mvc.PaintListener;
import grail.interfaces.mvc.PaintingViewMaster;
import util.annotations.Tags;

@Tags({"ObservableBridgeScenePainter"})
public class ObservableBridgeScenePainter extends Component implements PaintingViewMaster{

	@Override
	public void addPaintListener(PaintListener listener) {
		// TODO Auto-generated method stub
		
	}
	
}
//END OF FILE
//START OF FILE: src/grail/mvc/view/paintingsupport.java
package grail.mvc.view;

import java.awt.Graphics2D;
import java.awt.Toolkit;

import grail.interfaces.AvatarInterface;
import grail.interfaces.BoundedShapeInterface;
import grail.interfaces.ImageInterface;
import grail.interfaces.RotatingLineInterface;
import grail.interfaces.StringShapeInterface;
import grail.interfaces.VShapeInterface;

public class PaintingSupport {
	
}
//END OF FILE
//START OF FILE: src/grail/mvc/view/scenebackgroundview.java
package grail.mvc.view;

import java.awt.Graphics2D;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.mvc.PaintListener;
import grail.interfaces.mvc.PaintingViewMaster;
import util.annotations.Tags;

@Tags({"PaintListener"})
public class SceneBackgroundView implements PaintListener{

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void paint(Graphics2D g) {
		// TODO Auto-generated method stub
		
	}

	
}
//END OF FILE
//START OF FILE: src/grail/scanner/commandinterpreter.java
package grail.scanner;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.List;

import grail.SingletonsCreator;
import grail.animations.AnimatingCommand;
import grail.animations.SleepBasedAnimator;
import grail.animations.WaitBasedAnimator;
import grail.animations.ClapCommand;
import grail.animations.ClapLockstepCommand;
import grail.animations.LockstepAnimatingCommand;
import grail.animations.fromJavaTeaching.ABroadcastingClearanceManager;
import grail.animations.fromJavaTeaching.BroadcastingClearanceManager;
import grail.interfaces.AnimatorInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandInterpreterInterface;
import grail.interfaces.CommandThread;
import grail.interfaces.ScannerBeanInterface;
import grail.interfaces.Table;
import grail.interfaces.Undoer;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;
import grail.interfaces.ParserInterface;

@Tags({"CommandInterpreter", "SignedMoveCommandInterpreter", "ErrorResilientCommandInterpreter","ObservableCommandInterpreter"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Command", "Errors"})
@EditablePropertyNames({"Command"})
public class CommandInterpreter implements CommandInterpreterInterface {

	@Override
	public String getCommand() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setCommand(String command) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public String getErrors() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void addPropertyChangeListener(PropertyChangeListener listener) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateArthur() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateGalahad() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateLancelot() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateRobin() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void clapGuard() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateArthurWithWait() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateGalahadWithWait() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateLancelotWithWait() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateRobinWithWait() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void startAnimation() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateArthurWithLockstep() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateGalahadWithLockstep() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateLancelotWithLockstep() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void animateRobinWithLockstep() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void clapGuardLockstep() {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/parser.java
package grail.scanner;

import java.text.ParseException;
import java.util.HashSet;
import java.util.Set;

import grail.SingletonsCreator;
import grail.animations.fromJavaTeaching.BroadcastingClearanceManager;
import grail.collections.MyTable;
import grail.interfaces.AvatarInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import grail.interfaces.CompositeCommandThread;
import grail.interfaces.Number;
import grail.interfaces.ParserInterface;
import grail.interfaces.ScannerBeanInterface;
import grail.interfaces.Table;
import grail.interfaces.Token;
import grail.interfaces.UndoableCommandThread;
import grail.interfaces.Undoer;
import grail.interfaces.Word;
import grail.scanner.commands.ApproachCommand;
import grail.scanner.commands.CallCommand;
import grail.scanner.commands.CommandList;
import grail.scanner.commands.DefineCommand;
import grail.scanner.commands.ExecuteUndoableCommand;
import grail.scanner.commands.FailCommand;
import grail.scanner.commands.MoveCommand;
import grail.scanner.commands.PassCommand;
import grail.scanner.commands.ProceedAllCommand;
import grail.scanner.commands.RedoCommand;
import grail.scanner.commands.RepeatCommand;
import grail.scanner.commands.RotateLeftArmCommand;
import grail.scanner.commands.RotateRightArmCommand;
import grail.scanner.commands.SayCommand;
import grail.scanner.commands.SleepCommand;
import grail.scanner.commands.ThreadCommand;
import grail.scanner.commands.UndoCommand;
import grail.tokenBeans.EndToken;
import grail.tokenBeans.MinusToken;
import grail.tokenBeans.NumberToken;
import grail.tokenBeans.PlusToken;
import grail.tokenBeans.QuoteToken;
import grail.tokenBeans.StartToken;
import grail.tokenBeans.WordToken;
import grail.tokenBeans.commandBeans.ApproachCommandToken;
import grail.tokenBeans.commandBeans.FailCommandToken;
import grail.tokenBeans.commandBeans.MoveCommandToken;
import grail.tokenBeans.commandBeans.PassCommandToken;
import grail.tokenBeans.commandBeans.RepeatCommandToken;
import grail.tokenBeans.commandBeans.SayCommandToken;
import grail.tokenBeans.extraCommandBeans.CallCommandToken;
import grail.tokenBeans.extraCommandBeans.DefineCommandToken;
import grail.tokenBeans.extraCommandBeans.ProceedAllCommandToken;
import grail.tokenBeans.extraCommandBeans.RedoCommandToken;
import grail.tokenBeans.extraCommandBeans.RotateLeftArmCommandToken;
import grail.tokenBeans.extraCommandBeans.RotateRightArmCommandToken;
import grail.tokenBeans.extraCommandBeans.SleepCommandToken;
import grail.tokenBeans.extraCommandBeans.ThreadCommandToken;
import grail.tokenBeans.extraCommandBeans.UndoCommandToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.Tags;

@Tags({"Parser"})
@PropertyNames({"CommandText", "CommandObject", "Errors"})
@EditablePropertyNames({"CommandText"})
public class Parser implements ParserInterface {

	@Override
	public String getCommandText() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setCommandText(String string) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public CommandThread getCommandObject() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getErrors() {
		// TODO Auto-generated method stub
		return null;
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/parsingexception.java
package grail.scanner;

import java.io.IOException;
import java.text.ParseException;

import grail.interfaces.ParsingExceptionInterface;
import util.annotations.Tags;

@Tags({"ParsingException"})
public class ParsingException extends IOException implements ParsingExceptionInterface {

	@Override
	public String getExpected() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getEncountered() {
		// TODO Auto-generated method stub
		return null;
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/scannerbean.java
package grail.scanner;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

import java.util.Iterator;

import grail.collections.ClearableHistory;
import grail.interfaces.ClearableHistoryInterface;
import grail.interfaces.ScannerBeanInterface;
import grail.interfaces.Token;
import grail.tokenBeans.EndToken;
import grail.tokenBeans.MinusToken;
import grail.tokenBeans.NumberToken;
import grail.tokenBeans.PlusToken;
import grail.tokenBeans.QuoteToken;
import grail.tokenBeans.StartToken;
import grail.tokenBeans.WordToken;
import grail.tokenBeans.commandBeans.ApproachCommandToken;
import grail.tokenBeans.commandBeans.FailCommandToken;
import grail.tokenBeans.commandBeans.MoveCommandToken;
import grail.tokenBeans.commandBeans.PassCommandToken;
import grail.tokenBeans.commandBeans.RepeatCommandToken;
import grail.tokenBeans.commandBeans.SayCommandToken;
import grail.tokenBeans.extraCommandBeans.CallCommandToken;
import grail.tokenBeans.extraCommandBeans.DefineCommandToken;
import grail.tokenBeans.extraCommandBeans.ProceedAllCommandToken;
import grail.tokenBeans.extraCommandBeans.RedoCommandToken;
import grail.tokenBeans.extraCommandBeans.RotateLeftArmCommandToken;
import grail.tokenBeans.extraCommandBeans.RotateRightArmCommandToken;
import grail.tokenBeans.extraCommandBeans.SleepCommandToken;
import grail.tokenBeans.extraCommandBeans.ThreadCommandToken;
import grail.tokenBeans.extraCommandBeans.UndoCommandToken;
import grail.tokenBeans.extraCommandBeans.WaitCommandToken;


/**
 * A "Bean" object whose setter for scannedString prints the tokens and their types.
 * @author Semion
 *
 */
@Tags({"ScannerBean"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"ScannedString", "Tokens", "Errors", "TokenList"})
@EditablePropertyNames({"ScannedString"})
public class ScannerBean implements ScannerBeanInterface{

	@Override
	public String getScannedString() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void setScannedString(String s) throws ScanningException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Token[] getTokens() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String[] getErrors() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ClearableHistoryInterface getTokenList() {
		// TODO Auto-generated method stub
		return null;
	}

}//end class
//END OF FILE
//START OF FILE: src/grail/scanner/scanningexception.java
package grail.scanner;

import java.io.IOException;

import grail.interfaces.ScanningExceptionInterface;
import util.annotations.Tags;

@Tags({"ScanningException"})
public class ScanningException extends IOException implements ScanningExceptionInterface {

	@Override
	public String[] getErrors() {
		// TODO Auto-generated method stub
		return null;
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/scanningiterator.java
package grail.scanner;

import java.util.Iterator;

public class ScanningIterator implements Iterator<String>{

	@Override
	public boolean hasNext() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public String next() {
		// TODO Auto-generated method stub
		return null;
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/approachcommand.java
package grail.scanner.commands;

import grail.interfaces.AvatarInterface;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"ApproachCommand"})
public class ApproachCommand implements CommandThread{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}


}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/callcommand.java
package grail.scanner.commands;

import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import grail.interfaces.Table;
import util.annotations.Tags;
import util.misc.ThreadSupport;

@Tags({"CallCommandObject"})
public class CallCommand implements CommandThread{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/commandlist.java
package grail.scanner.commands;

import java.util.ArrayList;
import java.util.List;

import grail.interfaces.CompositeCommandThread;
import util.annotations.Tags;

@Tags({"CommandList"})
public class CommandList implements CompositeCommandThread{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void add(Runnable r) {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/definecommand.java
package grail.scanner.commands;

import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import grail.interfaces.Table;
import util.annotations.Tags;
import util.misc.ThreadSupport;

@Tags({"DefineCommandObject"})
public class DefineCommand implements CommandThread{
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/executeundoablecommand.java
package grail.scanner.commands;

import grail.collections.MoveCommandUndoer;
import grail.interfaces.CommandThread;
import grail.interfaces.UndoableCommandThread;
import grail.interfaces.Undoer;

public class ExecuteUndoableCommand implements CommandThread {

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/failcommand.java
package grail.scanner.commands;

import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"FailCommand"})
public class FailCommand implements CommandThread{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/movecommand.java
package grail.scanner.commands;

import grail.interfaces.AvatarInterface;
import grail.interfaces.CommandThread;
import grail.interfaces.UndoableCommandThread;
import util.annotations.Tags;

@Tags({"MoveCommand"})
public class MoveCommand implements UndoableCommandThread{
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void undo() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/passcommand.java
package grail.scanner.commands;

import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"PassCommand"})
public class PassCommand implements CommandThread{
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/proceedallcommand.java
package grail.scanner.commands;

import grail.animations.fromJavaTeaching.BroadcastingClearanceManager;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;
import util.misc.ThreadSupport;
@Tags({"ProceedAllCommand"})
public class ProceedAllCommand implements CommandThread{

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/redocommand.java
package grail.scanner.commands;

import grail.collections.MoveCommandUndoer;
import grail.interfaces.CommandThread;
import grail.interfaces.UndoableCommandThread;
import grail.interfaces.Undoer;
import util.annotations.Tags;

@Tags({"RedoCommand"})
public class RedoCommand implements CommandThread {
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/repeatcommand.java
package grail.scanner.commands;

import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"RepeatCommand"})
public class RepeatCommand implements CommandThread{
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/rotateleftarmcommand.java
package grail.scanner.commands;

import grail.interfaces.AvatarInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"RotateLeftArmCommandObject"})
public class RotateLeftArmCommand implements CommandThread {
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/rotaterightarmcommand.java
package grail.scanner.commands;

import grail.interfaces.AvatarInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"RotateRightArmCommandObject"})
public class RotateRightArmCommand implements CommandThread {
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/saycommand.java
package grail.scanner.commands;

import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;

@Tags({"SayCommand"})
public class SayCommand implements CommandThread{
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/sleepcommand.java
package grail.scanner.commands;

import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import util.annotations.Tags;
import util.misc.ThreadSupport;

@Tags({"SleepCommandObject"})
public class SleepCommand implements CommandThread{
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}

}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/threadcommand.java
package grail.scanner.commands;

import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandThread;
import grail.interfaces.Table;
import util.annotations.Tags;
import util.misc.ThreadSupport;

/**
 * Does not call command if such a command does not exist
 *
 */
@Tags({"ThreadCommandObject"})
public class ThreadCommand implements CommandThread{
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/scanner/commands/undocommand.java
package grail.scanner.commands;

import grail.collections.MoveCommandUndoer;
import grail.interfaces.CommandThread;
import grail.interfaces.UndoableCommandThread;
import grail.interfaces.Undoer;
import util.annotations.Tags;
@Tags({"UndoCommand"})
public class UndoCommand implements CommandThread {
	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/endtoken.java
package grail.tokenBeans;

import util.annotations.EditablePropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"End"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@EditablePropertyNames({"Input"})
public class EndToken extends GenericToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/generictoken.java
package grail.tokenBeans;

import grail.interfaces.Token;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;


@Tags({"Token"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input"})
@EditablePropertyNames({"Input"})
public abstract class GenericToken implements Token{
	public void setInput(String newString){
		
	};
	public String getInput(){
		return null;
	};
}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/minustoken.java
package grail.tokenBeans;

import util.annotations.EditablePropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Minus"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@EditablePropertyNames({"Input"})
public class MinusToken extends GenericToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/numbertoken.java
package grail.tokenBeans;

import grail.interfaces.Number;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Number"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class NumberToken extends GenericToken implements Number{

	@Override
	public int getValue() {
		// TODO Auto-generated method stub
		return 0;
	}
	
}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/plustoken.java
package grail.tokenBeans;

import util.annotations.EditablePropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Plus"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@EditablePropertyNames({"Input"})
public class PlusToken extends GenericToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/quotetoken.java
package grail.tokenBeans;

import util.annotations.EditablePropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Quote"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@EditablePropertyNames({"Input"})
public class QuoteToken extends GenericToken{

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/starttoken.java
package grail.tokenBeans;

import util.annotations.EditablePropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Start"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@EditablePropertyNames({"Input"})
public class StartToken extends GenericToken{
	
}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/wordtoken.java
package grail.tokenBeans;

import grail.interfaces.Word;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Word"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class WordToken extends GenericToken implements Word{

	@Override
	public String getValue() {
		// TODO Auto-generated method stub
		return null;
	}

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/commandbeans/approachcommandtoken.java
package grail.tokenBeans.commandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Approach"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class ApproachCommandToken extends WordToken {

	
}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/commandbeans/failcommandtoken.java
package grail.tokenBeans.commandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Fail"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class FailCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/commandbeans/movecommandtoken.java
package grail.tokenBeans.commandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Move"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class MoveCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/commandbeans/passcommandtoken.java
package grail.tokenBeans.commandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Pass"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class PassCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/commandbeans/repeatcommandtoken.java
package grail.tokenBeans.commandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Repeat"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class RepeatCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/commandbeans/saycommandtoken.java
package grail.tokenBeans.commandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Say"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class SayCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/callcommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Call"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class CallCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/definecommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Define"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class DefineCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/proceedallcommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"ProceedAll"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class ProceedAllCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/redocommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Redo"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class RedoCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/rotateleftarmcommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"RotateLeftArm"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class RotateLeftArmCommandToken extends WordToken {


}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/rotaterightarmcommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"RotateRightArm"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class RotateRightArmCommandToken extends WordToken {


}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/sleepcommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Sleep"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class SleepCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/threadcommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Thread"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class ThreadCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/undocommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Undo"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class UndoCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/grail/tokenbeans/extracommandbeans/waitcommandtoken.java
package grail.tokenBeans.extraCommandBeans;

import grail.tokenBeans.WordToken;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Wait"})@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class WaitCommandToken extends WordToken {

}
//END OF FILE
//START OF FILE: src/main/assignment12.java
package main;

import java.awt.Component;
import javax.swing.JFrame;
import javax.swing.JProgressBar;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import grail.SingletonsCreator;
import grail.animations.fromJavaTeaching.BroadcastingClearanceManager;
import grail.interfaces.BridgeSceneInterface;
import grail.interfaces.CommandInterpreterInterface;
import grail.interfaces.mvc.DelegatingBridgeSceneViewInterface;
import grail.interfaces.mvc.PaintingViewMaster;
import grail.mvc.view.CustomSwingTextFieldFactory;
import util.annotations.Tags;
import util.misc.ThreadSupport;

@Tags({"ProgressBarCreator"})
public class Assignment12 {

		public static void main(String[] args) throws InterruptedException {
		}//end main
		
}//end class
//END OF FILE
