{"userId":"Cui, Lily(yinglinc)","featureResults":[{"score":0.0,"results":[{"notes":"Could not instantiate/find class matching:[Angle]","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.angle.AngleMoveLeftLineTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Could not instantiate/find class matching:[Angle]","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.angle.AngleMoveRightLineTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"AngleMoveSuite","points":20.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"AngleMoveSuite                                         %.1f / 20.0"},"name":null,"autoNotes":"","message":"gradingTools.comp401f16.assignment5.testcases.angle.AngleMoveLeftLineTestCase: 0.0% \n  -- Could not instantiate/find class matching:[Angle]\ngradingTools.comp401f16.assignment5.testcases.angle.AngleMoveRightLineTestCase: 0.0% \n  -- Could not instantiate/find class matching:[Angle]\n","summary":"Notes about AngleMoveSuite:\n * From test case \"gradingTools.comp401f16.assignment5.testcases.angle.AngleMoveLeftLineTestCase\": Could not instantiate/find class matching:[Angle]\n * From test case \"gradingTools.comp401f16.assignment5.testcases.angle.AngleMoveRightLineTestCase\": Could not instantiate/find class matching:[Angle]"},{"score":0.0,"results":[{"notes":"Method matching scale not found in class: class grail.shapes.AvatarClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleHeadTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":true,"name":"BridgeSceneArthurScaleHeadTestCase","points":5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"BridgeSceneArthurScaleHeadTestCase                     %.1f /  5.0 (Extra credit)"},"name":null,"autoNotes":"","message":"gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleHeadTestCase: 0.0% \n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\n","summary":"Notes about BridgeSceneArthurScaleHeadTestCase:\n * From test case \"gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleHeadTestCase\": Method matching scale not found in class: class grail.shapes.AvatarClass"},{"score":0.0,"results":[{"notes":"Method matching getX not found in class: class grail.shapes.LineClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveLeftArmTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching getX not found in class: class grail.shapes.LineClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneLancelotMoveLeftArmTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching getX not found in class: class grail.shapes.LineClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneGalahadMoveLeftArmTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching getX not found in class: class grail.shapes.LineClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneRobinMoveLeftArmTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching getX not found in class: class grail.shapes.LineClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveRightLegTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching move not found in class: class grail.shapes.AvatarClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveHeadTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching move not found in class: class grail.shapes.AvatarClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveStringShapeTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"BridgeSceneComponentMoveSuite","points":40.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"BridgeSceneComponentMoveSuite                          %.1f / 40.0"},"name":null,"autoNotes":"","message":"gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveLeftArmTestCase: 0.0% \n  -- Method matching getX not found in class: class grail.shapes.LineClass\ngradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneLancelotMoveLeftArmTestCase: 0.0% \n  -- Method matching getX not found in class: class grail.shapes.LineClass\ngradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneGalahadMoveLeftArmTestCase: 0.0% \n  -- Method matching getX not found in class: class grail.shapes.LineClass\ngradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneRobinMoveLeftArmTestCase: 0.0% \n  -- Method matching getX not found in class: class grail.shapes.LineClass\ngradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveRightLegTestCase: 0.0% \n  -- Method matching getX not found in class: class grail.shapes.LineClass\ngradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveHeadTestCase: 0.0% \n  -- Method matching move not found in class: class grail.shapes.AvatarClass\ngradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveStringShapeTestCase: 0.0% \n  -- Method matching move not found in class: class grail.shapes.AvatarClass\n","summary":"Notes about BridgeSceneComponentMoveSuite:\n * From test case \"gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveLeftArmTestCase\": Method matching getX not found in class: class grail.shapes.LineClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneLancelotMoveLeftArmTestCase\": Method matching getX not found in class: class grail.shapes.LineClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneGalahadMoveLeftArmTestCase\": Method matching getX not found in class: class grail.shapes.LineClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneRobinMoveLeftArmTestCase\": Method matching getX not found in class: class grail.shapes.LineClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveRightLegTestCase\": Method matching getX not found in class: class grail.shapes.LineClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveHeadTestCase\": Method matching move not found in class: class grail.shapes.AvatarClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveStringShapeTestCase\": Method matching move not found in class: class grail.shapes.AvatarClass"},{"score":0.0,"results":[{"notes":"Method matching scale not found in class: class grail.shapes.AvatarClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleLeftArmTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching scale not found in class: class grail.shapes.AvatarClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneLancelotScaleLeftArmTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching scale not found in class: class grail.shapes.AvatarClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneGalahadScaleLeftArmTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching scale not found in class: class grail.shapes.AvatarClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneRobinScaleLeftArmTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"Method matching scale not found in class: class grail.shapes.AvatarClass","percentage":0.0,"name":"gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleRightLegTestCase","autoGraded":true,"pass":false,"fail":true,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":true,"name":"BridgeSceneComponentScaleSuite","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"BridgeSceneComponentScaleSuite                         %.1f / 10.0 (Extra credit)"},"name":null,"autoNotes":"","message":"gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleLeftArmTestCase: 0.0% \n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\ngradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneLancelotScaleLeftArmTestCase: 0.0% \n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\ngradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneGalahadScaleLeftArmTestCase: 0.0% \n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\ngradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneRobinScaleLeftArmTestCase: 0.0% \n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\ngradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleRightLegTestCase: 0.0% \n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\n","summary":"Notes about BridgeSceneComponentScaleSuite:\n * From test case \"gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleLeftArmTestCase\": Method matching scale not found in class: class grail.shapes.AvatarClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneLancelotScaleLeftArmTestCase\": Method matching scale not found in class: class grail.shapes.AvatarClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneGalahadScaleLeftArmTestCase\": Method matching scale not found in class: class grail.shapes.AvatarClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneRobinScaleLeftArmTestCase\": Method matching scale not found in class: class grail.shapes.AvatarClass\n * From test case \"gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleRightLegTestCase\": Method matching scale not found in class: class grail.shapes.AvatarClass"},{"score":6.0,"results":[{"notes":"classHasAtLeastOneInterface: (SpeechText.java:1) Classes with public instance methods should implement interfaces\nclassHasAtLeastOneInterface: (Bean.java:1) Classes with public instance methods should implement interfaces\n","percentage":0.6,"name":"Interfaces defined","autoGraded":true,"pass":false,"fail":false,"partialPass":true}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Public methods are in implemented interfaces","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Public methods are in implemented interfaces           %.1f / 10.0"},"name":null,"autoNotes":"","message":"Interfaces defined: 60.0% \n  -- classHasAtLeastOneInterface: (SpeechText.java:1) Classes with public instance methods should implement interfaces\nclassHasAtLeastOneInterface: (Bean.java:1) Classes with public instance methods should implement interfaces\n\n","summary":"Notes about Public methods are in implemented interfaces:\n * From test case \"Interfaces defined\": classHasAtLeastOneInterface: (SpeechText.java:1) Classes with public instance methods should implement interfaces\nclassHasAtLeastOneInterface: (Bean.java:1) Classes with public instance methods should implement interfaces\n"},{"score":0.0,"results":[{"notes":"expectedDeclaredSignatures: (Angle.java:7) In type Angle, missing declared signature: @move:int;int->void\n","percentage":0.0,"name":"Angle!@move:int;int->void","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"expectedDeclaredSignatures: (AvatarClass.java:6) In type AvatarClass, missing declared signature: @move:int;int->void\n","percentage":0.0,"name":"Avatar!@move:int;int->void","autoGraded":true,"pass":false,"fail":true,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Move methods defined in Angle and Avatar","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Move methods defined in Angle and Avatar               %.1f / 10.0"},"name":null,"autoNotes":"","message":"Angle!@move:int;int->void: 0.0% \n  -- expectedDeclaredSignatures: (Angle.java:7) In type Angle, missing declared signature: @move:int;int->void\n\nAvatar!@move:int;int->void: 0.0% \n  -- expectedDeclaredSignatures: (AvatarClass.java:6) In type AvatarClass, missing declared signature: @move:int;int->void\n\n","summary":"Notes about Move methods defined in Angle and Avatar:\n * From test case \"Angle!@move:int;int->void\": expectedDeclaredSignatures: (Angle.java:7) In type Angle, missing declared signature: @move:int;int->void\n\n * From test case \"Avatar!@move:int;int->void\": expectedDeclaredSignatures: (AvatarClass.java:6) In type AvatarClass, missing declared signature: @move:int;int->void\n"},{"score":0.0,"results":[{"notes":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Submission attachment(s)/Assignment5/Assignment5/src/main/Assignment5.java:1: warning: missingMethodCall: (Assignment5.java:1) has not made expected call         ThreadSupport!sleep:long->void\n","percentage":0.0,"name":"main.Assignment5!ThreadSupport!sleep:long->void","autoGraded":true,"pass":false,"fail":true,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Sleep called in animation","points":2.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Sleep called in animation                              %.1f /  2.0"},"name":null,"autoNotes":"","message":"main.Assignment5!ThreadSupport!sleep:long->void: 0.0% \n  -- /Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Submission attachment(s)/Assignment5/Assignment5/src/main/Assignment5.java:1: warning: missingMethodCall: (Assignment5.java:1) has not made expected call         ThreadSupport!sleep:long->void\n\n","summary":"Notes about Sleep called in animation:\n * From test case \"main.Assignment5!ThreadSupport!sleep:long->void\": /Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Submission attachment(s)/Assignment5/Assignment5/src/main/Assignment5.java:1: warning: missingMethodCall: (Assignment5.java:1) has not made expected call         ThreadSupport!sleep:long->void\n"},{"score":10.0,"results":[{"notes":"","percentage":1.0,"name":"Avatar!scale:double->void","autoGraded":true,"pass":true,"fail":false,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Scale method defined in avatar","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Scale method defined in avatar                         %.1f / 10.0"},"name":null,"autoNotes":"","message":"Avatar!scale:double->void: 100.0% \n","summary":""},{"score":6.0,"results":[{"notes":"","percentage":1.0,"name":"main.Assignment5!BridgeScene","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"BridgeScene!Avatar","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"Avatar!Angle","autoGraded":true,"pass":true,"fail":false,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Proper classes instantiated within each other","points":6.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Proper classes instantiated within each other          %.1f /  6.0"},"name":null,"autoNotes":"","message":"main.Assignment5!BridgeScene: 100.0% \nBridgeScene!Avatar: 100.0% \nAvatar!Angle: 100.0% \n","summary":""},{"score":6.0,"results":[{"notes":"expectedConstructors: (Angle.java:7) In type Angle, missing constructor: :\n","percentage":0.0,"name":"Angle!:","autoGraded":true,"pass":false,"fail":true,"partialPass":false},{"notes":"","percentage":1.0,"name":"Avatar!:@IMAGE_PATTERN","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"BridgeScene!:","autoGraded":true,"pass":true,"fail":false,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Required constructors defined for graphical classes","points":9.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Required constructors defined for graphical classes    %.1f /  9.0"},"name":null,"autoNotes":"","message":"Angle!:: 0.0% \n  -- expectedConstructors: (Angle.java:7) In type Angle, missing constructor: :\n\nAvatar!:@IMAGE_PATTERN: 100.0% \nBridgeScene!:: 100.0% \n","summary":"Notes about Required constructors defined for graphical classes:\n * From test case \"Angle!:\": expectedConstructors: (Angle.java:7) In type Angle, missing constructor: :\n"},{"score":33.0,"results":[{"notes":"","percentage":1.0,"name":"Angledefines getter for property LeftLine","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"Angledefines getter for property RightLine","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"Avatardefines getter for property Text","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"Avatardefines getter for property Head","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"Avatardefines getter for property Arms","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"Avatardefines getter for property Legs","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"BridgeScenedefines getter for property Arthur","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"BridgeScenedefines getter for property Galahad","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"BridgeScenedefines getter for property Lancelot","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"BridgeScenedefines getter for property Robin","autoGraded":true,"pass":true,"fail":false,"partialPass":false},{"notes":"","percentage":1.0,"name":"BridgeScenedefines getter for property Guard","autoGraded":true,"pass":true,"fail":false,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Graphical classes have proper properties defined","points":33.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Graphical classes have proper properties defined       %.1f / 33.0"},"name":null,"autoNotes":"","message":"Angledefines getter for property LeftLine: 100.0% \nAngledefines getter for property RightLine: 100.0% \nAvatardefines getter for property Text: 100.0% \nAvatardefines getter for property Head: 100.0% \nAvatardefines getter for property Arms: 100.0% \nAvatardefines getter for property Legs: 100.0% \nBridgeScenedefines getter for property Arthur: 100.0% \nBridgeScenedefines getter for property Galahad: 100.0% \nBridgeScenedefines getter for property Lancelot: 100.0% \nBridgeScenedefines getter for property Robin: 100.0% \nBridgeScenedefines getter for property Guard: 100.0% \n","summary":""},{"score":0.0,"results":[],"notes":"","target":{"manual":true,"extraCredit":false,"name":"Elements in animation are properly connected.","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Elements in animation are properly connected.          %.1f / 10.0"},"name":null,"autoNotes":"","message":"","summary":""},{"score":0.0,"results":[],"notes":"","target":{"manual":true,"extraCredit":false,"name":"Animation shows proper use of move function.","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Animation shows proper use of move function.           %.1f / 10.0"},"name":null,"autoNotes":"","message":"","summary":""},{"score":0.0,"results":[],"notes":"","target":{"manual":true,"extraCredit":true,"name":"Animation shows proper scaling","points":7.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Animation shows proper scaling                         %.1f /  7.0 (Extra credit)"},"name":null,"autoNotes":"","message":"","summary":""},{"score":0.0,"results":[],"notes":"","target":{"manual":true,"extraCredit":true,"name":"Animation shows proper arm rotation","points":8.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Animation shows proper arm rotation                    %.1f /  8.0 (Extra credit)"},"name":null,"autoNotes":"","message":"","summary":""},{"score":-10.0,"results":[{"notes":"variableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function arthur\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function galahad\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function guard\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function lancelot\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function robin\nvariableHasClassType: (AllFiveGuys.java:29) Class AvatarClass rather than interface used as the type of variable/function getGuard\nvariableHasClassType: (AllFiveGuys.java:32) Class AvatarClass rather than interface used as the type of variable/function getArthur\nvariableHasClassType: (AllFiveGuys.java:35) Class AvatarClass rather than interface used as the type of variable/function getLancelot\nvariableHasClassType: (AllFiveGuys.java:38) Class AvatarClass rather than interface used as the type of variable/function getRobin\nvariableHasClassType: (AllFiveGuys.java:41) Class AvatarClass rather than interface used as the type of variable/function getGalahad\nvariableHasClassType: (AllFiveGuysInterface.java:4) Class AvatarClass rather than interface used as the type of variable/function getGuard\nvariableHasClassType: (AllFiveGuysInterface.java:5) Class AvatarClass rather than interface used as the type of variable/function getArthur\nvariableHasClassType: (AllFiveGuysInterface.java:6) Class AvatarClass rather than interface used as the type of variable/function getLancelot\nvariableHasClassType: (AllFiveGuysInterface.java:7) Class AvatarClass rather than interface used as the type of variable/function getRobin\nvariableHasClassType: (AllFiveGuysInterface.java:8) Class AvatarClass rather than interface used as the type of variable/function getGalahad\nvariableHasClassType: (AvatarClass.java:11) Class Angle rather than interface used as the type of variable/function arms\nvariableHasClassType: (AvatarClass.java:11) Class Angle rather than interface used as the type of variable/function legs\nvariableHasClassType: (AvatarClass.java:31) Class Angle rather than interface used as the type of variable/function getArms\nvariableHasClassType: (AvatarClass.java:34) Class Angle rather than interface used as the type of variable/function getLegs\nvariableHasClassType: (AvatarClassInterface.java:5) Class Angle rather than interface used as the type of variable/function getArms\nvariableHasClassType: (AvatarClassInterface.java:8) Class Angle rather than interface used as the type of variable/function getLegs\nvariableHasClassType: (AvatarClass.java:10) Class HeadPictures rather than interface used as the type of variable/function headTest\nvariableHasClassType: (AvatarClass.java:28) Class HeadPictures rather than interface used as the type of variable/function getHead\nvariableHasClassType: (AvatarClassInterface.java:4) Class HeadPictures rather than interface used as the type of variable/function getHead\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine1\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine2\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine3\nvariableHasClassType: (Angle.java:20) Class LineClass rather than interface used as the type of variable/function getLeftLine\nvariableHasClassType: (Angle.java:23) Class LineClass rather than interface used as the type of variable/function getRightLine\nvariableHasClassType: (AvatarClass.java:12) Class LineClass rather than interface used as the type of variable/function body\nvariableHasClassType: (AvatarClass.java:37) Class LineClass rather than interface used as the type of variable/function getBody\nvariableHasClassType: (AvatarClassInterface.java:6) Class LineClass rather than interface used as the type of variable/function getBody\nvariableHasClassType: (Angle.java:15) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (Angle.java:26) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (AvatarClass.java:13) Class Point rather than interface used as the type of variable/function bodyPoint\nvariableHasClassType: (AvatarClass.java:14) Class Point rather than interface used as the type of variable/function armsPoint\nvariableHasClassType: (AvatarClass.java:15) Class Point rather than interface used as the type of variable/function legsPoint\nvariableHasClassType: (AvatarClass.java:45) Class Point rather than interface used as the type of variable/function point\nvariableHasClassType: (AvatarClassInterface.java:9) Class Point rather than interface used as the type of variable/function point\nvariableHasClassType: (LineClass.java:10) Class Point rather than interface used as the type of variable/function location\nvariableHasClassType: (LineClass.java:12) Class Point rather than interface used as the type of variable/function initialLocation\nvariableHasClassType: (LineClass.java:18) Class Point rather than interface used as the type of variable/function getLocation\nvariableHasClassType: (LineClass.java:21) Class Point rather than interface used as the type of variable/function newLocation\nvariableHasClassType: (LineClassInterface.java:4) Class Point rather than interface used as the type of variable/function getLocation\nvariableHasClassType: (LineClassInterface.java:5) Class Point rather than interface used as the type of variable/function newLocation\nvariableHasClassType: (AvatarClass.java:16) Class SpeechText rather than interface used as the type of variable/function newText\nvariableHasClassType: (AvatarClass.java:40) Class SpeechText rather than interface used as the type of variable/function getStringShape\nvariableHasClassType: (AvatarClassInterface.java:7) Class SpeechText rather than interface used as the type of variable/function getStringShape\nvariableHasClassType: (VAngleShapeInterface.java:4) Class LineClass rather than interface used as the type of variable/function getLeftLine\nvariableHasClassType: (VAngleShapeInterface.java:5) Class LineClass rather than interface used as the type of variable/function getRightLine\nvariableHasClassType: (VAngleShapeInterface.java:6) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (MainClass.java:21) Class Bean rather than interface used as the type of variable/function bean\n","percentage":0.0,"name":"Variable types using interface","autoGraded":true,"pass":false,"fail":true,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Variables should have interface, not class, type","points":-10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Variables should have interface, not class, type%.1f /  -10.0"},"name":null,"autoNotes":"","message":"Variable types using interface: 0.0% \n  -- variableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function arthur\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function galahad\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function guard\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function lancelot\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function robin\nvariableHasClassType: (AllFiveGuys.java:29) Class AvatarClass rather than interface used as the type of variable/function getGuard\nvariableHasClassType: (AllFiveGuys.java:32) Class AvatarClass rather than interface used as the type of variable/function getArthur\nvariableHasClassType: (AllFiveGuys.java:35) Class AvatarClass rather than interface used as the type of variable/function getLancelot\nvariableHasClassType: (AllFiveGuys.java:38) Class AvatarClass rather than interface used as the type of variable/function getRobin\nvariableHasClassType: (AllFiveGuys.java:41) Class AvatarClass rather than interface used as the type of variable/function getGalahad\nvariableHasClassType: (AllFiveGuysInterface.java:4) Class AvatarClass rather than interface used as the type of variable/function getGuard\nvariableHasClassType: (AllFiveGuysInterface.java:5) Class AvatarClass rather than interface used as the type of variable/function getArthur\nvariableHasClassType: (AllFiveGuysInterface.java:6) Class AvatarClass rather than interface used as the type of variable/function getLancelot\nvariableHasClassType: (AllFiveGuysInterface.java:7) Class AvatarClass rather than interface used as the type of variable/function getRobin\nvariableHasClassType: (AllFiveGuysInterface.java:8) Class AvatarClass rather than interface used as the type of variable/function getGalahad\nvariableHasClassType: (AvatarClass.java:11) Class Angle rather than interface used as the type of variable/function arms\nvariableHasClassType: (AvatarClass.java:11) Class Angle rather than interface used as the type of variable/function legs\nvariableHasClassType: (AvatarClass.java:31) Class Angle rather than interface used as the type of variable/function getArms\nvariableHasClassType: (AvatarClass.java:34) Class Angle rather than interface used as the type of variable/function getLegs\nvariableHasClassType: (AvatarClassInterface.java:5) Class Angle rather than interface used as the type of variable/function getArms\nvariableHasClassType: (AvatarClassInterface.java:8) Class Angle rather than interface used as the type of variable/function getLegs\nvariableHasClassType: (AvatarClass.java:10) Class HeadPictures rather than interface used as the type of variable/function headTest\nvariableHasClassType: (AvatarClass.java:28) Class HeadPictures rather than interface used as the type of variable/function getHead\nvariableHasClassType: (AvatarClassInterface.java:4) Class HeadPictures rather than interface used as the type of variable/function getHead\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine1\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine2\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine3\nvariableHasClassType: (Angle.java:20) Class LineClass rather than interface used as the type of variable/function getLeftLine\nvariableHasClassType: (Angle.java:23) Class LineClass rather than interface used as the type of variable/function getRightLine\nvariableHasClassType: (AvatarClass.java:12) Class LineClass rather than interface used as the type of variable/function body\nvariableHasClassType: (AvatarClass.java:37) Class LineClass rather than interface used as the type of variable/function getBody\nvariableHasClassType: (AvatarClassInterface.java:6) Class LineClass rather than interface used as the type of variable/function getBody\nvariableHasClassType: (Angle.java:15) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (Angle.java:26) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (AvatarClass.java:13) Class Point rather than interface used as the type of variable/function bodyPoint\nvariableHasClassType: (AvatarClass.java:14) Class Point rather than interface used as the type of variable/function armsPoint\nvariableHasClassType: (AvatarClass.java:15) Class Point rather than interface used as the type of variable/function legsPoint\nvariableHasClassType: (AvatarClass.java:45) Class Point rather than interface used as the type of variable/function point\nvariableHasClassType: (AvatarClassInterface.java:9) Class Point rather than interface used as the type of variable/function point\nvariableHasClassType: (LineClass.java:10) Class Point rather than interface used as the type of variable/function location\nvariableHasClassType: (LineClass.java:12) Class Point rather than interface used as the type of variable/function initialLocation\nvariableHasClassType: (LineClass.java:18) Class Point rather than interface used as the type of variable/function getLocation\nvariableHasClassType: (LineClass.java:21) Class Point rather than interface used as the type of variable/function newLocation\nvariableHasClassType: (LineClassInterface.java:4) Class Point rather than interface used as the type of variable/function getLocation\nvariableHasClassType: (LineClassInterface.java:5) Class Point rather than interface used as the type of variable/function newLocation\nvariableHasClassType: (AvatarClass.java:16) Class SpeechText rather than interface used as the type of variable/function newText\nvariableHasClassType: (AvatarClass.java:40) Class SpeechText rather than interface used as the type of variable/function getStringShape\nvariableHasClassType: (AvatarClassInterface.java:7) Class SpeechText rather than interface used as the type of variable/function getStringShape\nvariableHasClassType: (VAngleShapeInterface.java:4) Class LineClass rather than interface used as the type of variable/function getLeftLine\nvariableHasClassType: (VAngleShapeInterface.java:5) Class LineClass rather than interface used as the type of variable/function getRightLine\nvariableHasClassType: (VAngleShapeInterface.java:6) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (MainClass.java:21) Class Bean rather than interface used as the type of variable/function bean\n\n","summary":"Notes about Variables should have interface, not class, type:\n * From test case \"Variable types using interface\": variableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function arthur\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function galahad\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function guard\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function lancelot\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function robin\nvariableHasClassType: (AllFiveGuys.java:29) Class AvatarClass rather than interface used as the type of variable/function getGuard\nvariableHasClassType: (AllFiveGuys.java:32) Class AvatarClass rather than interface used as the type of variable/function getArthur\nvariableHasClassType: (AllFiveGuys.java:35) Class AvatarClass rather than interface used as the type of variable/function getLancelot\nvariableHasClassType: (AllFiveGuys.java:38) Class AvatarClass rather than interface used as the type of variable/function getRobin\nvariableHasClassType: (AllFiveGuys.java:41) Class AvatarClass rather than interface used as the type of variable/function getGalahad\nvariableHasClassType: (AllFiveGuysInterface.java:4) Class AvatarClass rather than interface used as the type of variable/function getGuard\nvariableHasClassType: (AllFiveGuysInterface.java:5) Class AvatarClass rather than interface used as the type of variable/function getArthur\nvariableHasClassType: (AllFiveGuysInterface.java:6) Class AvatarClass rather than interface used as the type of variable/function getLancelot\nvariableHasClassType: (AllFiveGuysInterface.java:7) Class AvatarClass rather than interface used as the type of variable/function getRobin\nvariableHasClassType: (AllFiveGuysInterface.java:8) Class AvatarClass rather than interface used as the type of variable/function getGalahad\nvariableHasClassType: (AvatarClass.java:11) Class Angle rather than interface used as the type of variable/function arms\nvariableHasClassType: (AvatarClass.java:11) Class Angle rather than interface used as the type of variable/function legs\nvariableHasClassType: (AvatarClass.java:31) Class Angle rather than interface used as the type of variable/function getArms\nvariableHasClassType: (AvatarClass.java:34) Class Angle rather than interface used as the type of variable/function getLegs\nvariableHasClassType: (AvatarClassInterface.java:5) Class Angle rather than interface used as the type of variable/function getArms\nvariableHasClassType: (AvatarClassInterface.java:8) Class Angle rather than interface used as the type of variable/function getLegs\nvariableHasClassType: (AvatarClass.java:10) Class HeadPictures rather than interface used as the type of variable/function headTest\nvariableHasClassType: (AvatarClass.java:28) Class HeadPictures rather than interface used as the type of variable/function getHead\nvariableHasClassType: (AvatarClassInterface.java:4) Class HeadPictures rather than interface used as the type of variable/function getHead\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine1\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine2\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine3\nvariableHasClassType: (Angle.java:20) Class LineClass rather than interface used as the type of variable/function getLeftLine\nvariableHasClassType: (Angle.java:23) Class LineClass rather than interface used as the type of variable/function getRightLine\nvariableHasClassType: (AvatarClass.java:12) Class LineClass rather than interface used as the type of variable/function body\nvariableHasClassType: (AvatarClass.java:37) Class LineClass rather than interface used as the type of variable/function getBody\nvariableHasClassType: (AvatarClassInterface.java:6) Class LineClass rather than interface used as the type of variable/function getBody\nvariableHasClassType: (Angle.java:15) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (Angle.java:26) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (AvatarClass.java:13) Class Point rather than interface used as the type of variable/function bodyPoint\nvariableHasClassType: (AvatarClass.java:14) Class Point rather than interface used as the type of variable/function armsPoint\nvariableHasClassType: (AvatarClass.java:15) Class Point rather than interface used as the type of variable/function legsPoint\nvariableHasClassType: (AvatarClass.java:45) Class Point rather than interface used as the type of variable/function point\nvariableHasClassType: (AvatarClassInterface.java:9) Class Point rather than interface used as the type of variable/function point\nvariableHasClassType: (LineClass.java:10) Class Point rather than interface used as the type of variable/function location\nvariableHasClassType: (LineClass.java:12) Class Point rather than interface used as the type of variable/function initialLocation\nvariableHasClassType: (LineClass.java:18) Class Point rather than interface used as the type of variable/function getLocation\nvariableHasClassType: (LineClass.java:21) Class Point rather than interface used as the type of variable/function newLocation\nvariableHasClassType: (LineClassInterface.java:4) Class Point rather than interface used as the type of variable/function getLocation\nvariableHasClassType: (LineClassInterface.java:5) Class Point rather than interface used as the type of variable/function newLocation\nvariableHasClassType: (AvatarClass.java:16) Class SpeechText rather than interface used as the type of variable/function newText\nvariableHasClassType: (AvatarClass.java:40) Class SpeechText rather than interface used as the type of variable/function getStringShape\nvariableHasClassType: (AvatarClassInterface.java:7) Class SpeechText rather than interface used as the type of variable/function getStringShape\nvariableHasClassType: (VAngleShapeInterface.java:4) Class LineClass rather than interface used as the type of variable/function getLeftLine\nvariableHasClassType: (VAngleShapeInterface.java:5) Class LineClass rather than interface used as the type of variable/function getRightLine\nvariableHasClassType: (VAngleShapeInterface.java:6) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (MainClass.java:21) Class Bean rather than interface used as the type of variable/function bean\n"},{"score":-5.0,"results":[{"notes":"magic.number: (AllFiveGuys.java:21) In type AllFiveGuys, magic number 200 in expression list EXPR null , EXPR 200 , EXPR 0 \nmagic.number: (AllFiveGuys.java:22) In type AllFiveGuys, magic number -200 in expression list 200 \nmagic.number: (AllFiveGuys.java:23) In type AllFiveGuys, magic number 400 in expression list EXPR null , EXPR 400 , EXPR 0 \nmagic.number: (AllFiveGuys.java:24) In type AllFiveGuys, magic number 600 in expression list EXPR null , EXPR 600 , EXPR 0 \nmagic.number: (Angle.java:16) In type Angle, magic number 75 in expression list EXPR pointTheLinesMeet , EXPR 75 , EXPR 75 \nmagic.number: (Angle.java:17) In type Angle, magic number -75 in expression list 75 \nmagic.number: (Angle.java:17) In type Angle, magic number 75 in expression list EXPR pointTheLinesMeet , EXPR - 75 , EXPR 75 \nmagic.number: (AvatarClass.java:20) In type AvatarClass, magic number 100 in expression list EXPR jpeg , EXPR 250 , EXPR 100 , EXPR 100 , EXPR 100 \nmagic.number: (AvatarClass.java:20) In type AvatarClass, magic number 250 in expression list EXPR jpeg , EXPR 250 , EXPR 100 , EXPR 100 , EXPR 100 \nmagic.number: (AvatarClass.java:23) In type AvatarClass, magic number 100 in expression list EXPR bodyPoint , EXPR 0 , EXPR 100 \nmagic.number: (AvatarClass.java:24) In type AvatarClass, magic number 450 in expression list EXPR \"Arthur takes a Walk\" , EXPR 450 , EXPR 50 \nmagic.number: (AvatarClass.java:24) In type AvatarClass, magic number 50 in expression list EXPR \"Arthur takes a Walk\" , EXPR 450 , EXPR 50 \nmagic.number: (Assignment5.java:14) In type Assignment5, magic number 1000 in expression list EXPR 1000 , EXPR 400 \nmagic.number: (Assignment5.java:14) In type Assignment5, magic number 400 in expression list EXPR 1000 , EXPR 400 \nmagic.number: (Assignment5.java:17) In type Assignment5, magic number 110 in expression list 110 \nmagic.number: (Assignment5.java:18) In type Assignment5, magic number 50 in expression list EXPR 50 \nmagic.number: (Assignment5.java:19) In type Assignment5, magic number 50 in expression list 50 \nmagic.number: (Assignment5.java:20) In type Assignment5, magic number 10 in expression list EXPR null , EXPR 10 , EXPR 0 \nmagic.number: (Assignment5.java:23) In type Assignment5, magic number 10 in expression list EXPR null , EXPR 10 , EXPR 0 \nmagic.number: (MainClass.java:23) In type MainClass, magic number 3000 in expression list EXPR 3000 \nmagic.number: (MainClass.java:26) In type MainClass, magic number 3000 in expression list EXPR 3000 \nmagic.number: (MainClass.java:29) In type MainClass, magic number 3000 in expression list EXPR 3000 \n","percentage":0.0,"name":"No magic number","autoGraded":true,"pass":false,"fail":true,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"No magic numbers","points":-5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"No magic numbers                            %.1f /  -5.0"},"name":null,"autoNotes":"","message":"No magic number: 0.0% \n  -- magic.number: (AllFiveGuys.java:21) In type AllFiveGuys, magic number 200 in expression list EXPR null , EXPR 200 , EXPR 0 \nmagic.number: (AllFiveGuys.java:22) In type AllFiveGuys, magic number -200 in expression list 200 \nmagic.number: (AllFiveGuys.java:23) In type AllFiveGuys, magic number 400 in expression list EXPR null , EXPR 400 , EXPR 0 \nmagic.number: (AllFiveGuys.java:24) In type AllFiveGuys, magic number 600 in expression list EXPR null , EXPR 600 , EXPR 0 \nmagic.number: (Angle.java:16) In type Angle, magic number 75 in expression list EXPR pointTheLinesMeet , EXPR 75 , EXPR 75 \nmagic.number: (Angle.java:17) In type Angle, magic number -75 in expression list 75 \nmagic.number: (Angle.java:17) In type Angle, magic number 75 in expression list EXPR pointTheLinesMeet , EXPR - 75 , EXPR 75 \nmagic.number: (AvatarClass.java:20) In type AvatarClass, magic number 100 in expression list EXPR jpeg , EXPR 250 , EXPR 100 , EXPR 100 , EXPR 100 \nmagic.number: (AvatarClass.java:20) In type AvatarClass, magic number 250 in expression list EXPR jpeg , EXPR 250 , EXPR 100 , EXPR 100 , EXPR 100 \nmagic.number: (AvatarClass.java:23) In type AvatarClass, magic number 100 in expression list EXPR bodyPoint , EXPR 0 , EXPR 100 \nmagic.number: (AvatarClass.java:24) In type AvatarClass, magic number 450 in expression list EXPR \"Arthur takes a Walk\" , EXPR 450 , EXPR 50 \nmagic.number: (AvatarClass.java:24) In type AvatarClass, magic number 50 in expression list EXPR \"Arthur takes a Walk\" , EXPR 450 , EXPR 50 \nmagic.number: (Assignment5.java:14) In type Assignment5, magic number 1000 in expression list EXPR 1000 , EXPR 400 \nmagic.number: (Assignment5.java:14) In type Assignment5, magic number 400 in expression list EXPR 1000 , EXPR 400 \nmagic.number: (Assignment5.java:17) In type Assignment5, magic number 110 in expression list 110 \nmagic.number: (Assignment5.java:18) In type Assignment5, magic number 50 in expression list EXPR 50 \nmagic.number: (Assignment5.java:19) In type Assignment5, magic number 50 in expression list 50 \nmagic.number: (Assignment5.java:20) In type Assignment5, magic number 10 in expression list EXPR null , EXPR 10 , EXPR 0 \nmagic.number: (Assignment5.java:23) In type Assignment5, magic number 10 in expression list EXPR null , EXPR 10 , EXPR 0 \nmagic.number: (MainClass.java:23) In type MainClass, magic number 3000 in expression list EXPR 3000 \nmagic.number: (MainClass.java:26) In type MainClass, magic number 3000 in expression list EXPR 3000 \nmagic.number: (MainClass.java:29) In type MainClass, magic number 3000 in expression list EXPR 3000 \n\n","summary":"Notes about No magic numbers:\n * From test case \"No magic number\": magic.number: (AllFiveGuys.java:21) In type AllFiveGuys, magic number 200 in expression list EXPR null , EXPR 200 , EXPR 0 \nmagic.number: (AllFiveGuys.java:22) In type AllFiveGuys, magic number -200 in expression list 200 \nmagic.number: (AllFiveGuys.java:23) In type AllFiveGuys, magic number 400 in expression list EXPR null , EXPR 400 , EXPR 0 \nmagic.number: (AllFiveGuys.java:24) In type AllFiveGuys, magic number 600 in expression list EXPR null , EXPR 600 , EXPR 0 \nmagic.number: (Angle.java:16) In type Angle, magic number 75 in expression list EXPR pointTheLinesMeet , EXPR 75 , EXPR 75 \nmagic.number: (Angle.java:17) In type Angle, magic number -75 in expression list 75 \nmagic.number: (Angle.java:17) In type Angle, magic number 75 in expression list EXPR pointTheLinesMeet , EXPR - 75 , EXPR 75 \nmagic.number: (AvatarClass.java:20) In type AvatarClass, magic number 100 in expression list EXPR jpeg , EXPR 250 , EXPR 100 , EXPR 100 , EXPR 100 \nmagic.number: (AvatarClass.java:20) In type AvatarClass, magic number 250 in expression list EXPR jpeg , EXPR 250 , EXPR 100 , EXPR 100 , EXPR 100 \nmagic.number: (AvatarClass.java:23) In type AvatarClass, magic number 100 in expression list EXPR bodyPoint , EXPR 0 , EXPR 100 \nmagic.number: (AvatarClass.java:24) In type AvatarClass, magic number 450 in expression list EXPR \"Arthur takes a Walk\" , EXPR 450 , EXPR 50 \nmagic.number: (AvatarClass.java:24) In type AvatarClass, magic number 50 in expression list EXPR \"Arthur takes a Walk\" , EXPR 450 , EXPR 50 \nmagic.number: (Assignment5.java:14) In type Assignment5, magic number 1000 in expression list EXPR 1000 , EXPR 400 \nmagic.number: (Assignment5.java:14) In type Assignment5, magic number 400 in expression list EXPR 1000 , EXPR 400 \nmagic.number: (Assignment5.java:17) In type Assignment5, magic number 110 in expression list 110 \nmagic.number: (Assignment5.java:18) In type Assignment5, magic number 50 in expression list EXPR 50 \nmagic.number: (Assignment5.java:19) In type Assignment5, magic number 50 in expression list 50 \nmagic.number: (Assignment5.java:20) In type Assignment5, magic number 10 in expression list EXPR null , EXPR 10 , EXPR 0 \nmagic.number: (Assignment5.java:23) In type Assignment5, magic number 10 in expression list EXPR null , EXPR 10 , EXPR 0 \nmagic.number: (MainClass.java:23) In type MainClass, magic number 3000 in expression list EXPR 3000 \nmagic.number: (MainClass.java:26) In type MainClass, magic number 3000 in expression list EXPR 3000 \nmagic.number: (MainClass.java:29) In type MainClass, magic number 3000 in expression list EXPR 3000 \n"},{"score":-5.0,"results":[],"notes":"","target":{"manual":true,"extraCredit":false,"name":"Interactive Run","points":-5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Interactive Run                             %.1f /  -5.0"},"name":null,"autoNotes":"","message":"","summary":""},{"score":0.0,"results":[{"notes":"","percentage":1.0,"name":"Illegal import or call test case","autoGraded":true,"pass":true,"fail":false,"partialPass":false}],"notes":"","target":{"manual":false,"extraCredit":false,"name":"Illegal import or call","points":-25.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Illegal import or call                      %.1f /  -25.0"},"name":null,"autoNotes":"","message":"Illegal import or call test case: 100.0% \n","summary":""}],"restrictionResults":[],"comments":"","latePenalty":1.0,"sourcePoints":0.0,"score":41.0,"gradingFeatures":[{"featureName":"AngleMoveSuite","score":0.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AngleMoveSuite.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-AngleMoveSuite.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-AngleMoveSuite.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- Could not instantiate/find class matching:[Angle]\n  -- Could not instantiate/find class matching:[Angle]\n","resultFormat":"AngleMoveSuite                                         %.1f / 20.0","output":"*****************************(AngleMoveSuite)*****************************\n### gradingTools.comp401f16.assignment5.testcases.angle.AngleMoveLeftLineTestCase: 1.0\n### gradingTools.comp401f16.assignment5.testcases.angle.AngleMoveLeftLineTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.angle.AngleMoveRightLineTestCase: 1.0\n### gradingTools.comp401f16.assignment5.testcases.angle.AngleMoveRightLineTestCase: 0.0\n","feature":{"manual":false,"extraCredit":false,"name":"AngleMoveSuite","points":20.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"AngleMoveSuite                                         %.1f / 20.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":false,"selected":false,"manual":false,"max":20.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-AngleMoveSuite.txt"},{"featureName":"BridgeSceneArthurScaleHeadTestCase","score":0.0,"graded":true,"autoGradable":true,"extraCredit":true,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/BridgeSceneArthurScaleHeadTestCase.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-BridgeSceneArthurScaleHeadTestCase.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-BridgeSceneArthurScaleHeadTestCase.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- Method matching scale not found in class: class grail.shapes.AvatarClass\n","resultFormat":"BridgeSceneArthurScaleHeadTestCase                     %.1f /  5.0 (Extra credit)","output":"*****************************(BridgeSceneArthurScaleHeadTestCase)*****************************\n### gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleHeadTestCase: 1.0\nCalling constructor public grail.shapes.AllFiveGuys()with args:[]timeOut:2000\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@1c98290c 479734028 method:public grail.shapes.HeadPictures grail.shapes.AvatarClass.getHead() args:[]timeOut:2000\nCalling on object grail.shapes.HeadPictures@fd46303 265577219 method:public int grail.shapes.HeadPictures.getWidth() args:[]timeOut:2000\nCalling on object grail.shapes.HeadPictures@fd46303 265577219 method:public int grail.shapes.HeadPictures.getHeight() args:[]timeOut:2000\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleHeadTestCase: 0.0\n","feature":{"manual":false,"extraCredit":true,"name":"BridgeSceneArthurScaleHeadTestCase","points":5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"BridgeSceneArthurScaleHeadTestCase                     %.1f /  5.0 (Extra credit)"},"validate":false,"restriction":false,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":false,"selected":false,"manual":false,"max":5.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-BridgeSceneArthurScaleHeadTestCase.txt"},{"featureName":"BridgeSceneComponentMoveSuite","score":0.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/BridgeSceneComponentMoveSuite.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-BridgeSceneComponentMoveSuite.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-BridgeSceneComponentMoveSuite.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- Method matching getX not found in class: class grail.shapes.LineClass\n  -- Method matching getX not found in class: class grail.shapes.LineClass\n  -- Method matching getX not found in class: class grail.shapes.LineClass\n  -- Method matching getX not found in class: class grail.shapes.LineClass\n  -- Method matching getX not found in class: class grail.shapes.LineClass\n  -- Method matching move not found in class: class grail.shapes.AvatarClass\n  -- Method matching move not found in class: class grail.shapes.AvatarClass\n","resultFormat":"BridgeSceneComponentMoveSuite                          %.1f / 40.0","output":"*****************************(BridgeSceneComponentMoveSuite)*****************************\n### gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveLeftArmTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@1c98290c 479734028 method:public grail.shapes.Angle grail.shapes.AvatarClass.getArms() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@1849db1a 407493402 method:public grail.shapes.LineClass grail.shapes.Angle.getLeftLine() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveLeftArmTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneLancelotMoveLeftArmTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getLancelot() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@5f2606b 99770475 method:public grail.shapes.Angle grail.shapes.AvatarClass.getArms() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@3ebff828 1052768296 method:public grail.shapes.LineClass grail.shapes.Angle.getLeftLine() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneLancelotMoveLeftArmTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneGalahadMoveLeftArmTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getGalahad() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@2cf23c81 754072705 method:public grail.shapes.Angle grail.shapes.AvatarClass.getArms() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@35fe2125 905847077 method:public grail.shapes.LineClass grail.shapes.Angle.getLeftLine() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneGalahadMoveLeftArmTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneRobinMoveLeftArmTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getRobin() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@1255b1d1 307605969 method:public grail.shapes.Angle grail.shapes.AvatarClass.getArms() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@7c22d4f 130166095 method:public grail.shapes.LineClass grail.shapes.Angle.getLeftLine() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.move.others.BridgeSceneRobinMoveLeftArmTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveRightLegTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@1c98290c 479734028 method:public grail.shapes.Angle grail.shapes.AvatarClass.getLegs() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@46e8a539 1189651769 method:public grail.shapes.LineClass grail.shapes.Angle.getRightLine() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveRightLegTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveHeadTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@1c98290c 479734028 method:public grail.shapes.HeadPictures grail.shapes.AvatarClass.getHead() args:[]timeOut:2000\nCalling on object grail.shapes.HeadPictures@fd46303 265577219 method:public int grail.shapes.HeadPictures.getX() args:[]timeOut:2000\nCalling on object grail.shapes.HeadPictures@fd46303 265577219 method:public int grail.shapes.HeadPictures.getY() args:[]timeOut:2000\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveHeadTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveStringShapeTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@1c98290c 479734028 method:public grail.shapes.SpeechText grail.shapes.AvatarClass.getStringShape() args:[]timeOut:2000\nCalling on object grail.shapes.SpeechText@27a5328c 665137804 method:public int grail.shapes.SpeechText.getX() args:[]timeOut:2000\nCalling on object grail.shapes.SpeechText@27a5328c 665137804 method:public int grail.shapes.SpeechText.getY() args:[]timeOut:2000\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.move.arthur.BridgeSceneArthurMoveStringShapeTestCase: 0.0\n","feature":{"manual":false,"extraCredit":false,"name":"BridgeSceneComponentMoveSuite","points":40.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"BridgeSceneComponentMoveSuite                          %.1f / 40.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":false,"selected":false,"manual":false,"max":40.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-BridgeSceneComponentMoveSuite.txt"},{"featureName":"BridgeSceneComponentScaleSuite","score":0.0,"graded":true,"autoGradable":true,"extraCredit":true,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/BridgeSceneComponentScaleSuite.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-BridgeSceneComponentScaleSuite.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-BridgeSceneComponentScaleSuite.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- Method matching scale not found in class: class grail.shapes.AvatarClass\n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\n  -- Method matching scale not found in class: class grail.shapes.AvatarClass\n","resultFormat":"BridgeSceneComponentScaleSuite                         %.1f / 10.0 (Extra credit)","output":"*****************************(BridgeSceneComponentScaleSuite)*****************************\n### gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleLeftArmTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@1c98290c 479734028 method:public grail.shapes.Angle grail.shapes.AvatarClass.getArms() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@1849db1a 407493402 method:public grail.shapes.LineClass grail.shapes.Angle.getLeftLine() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@6d1d4d7 114414807 method:public int grail.shapes.LineClass.getWidth() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@6d1d4d7 114414807 method:public int grail.shapes.LineClass.getHeight() args:[]timeOut:2000\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleLeftArmTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneLancelotScaleLeftArmTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getLancelot() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@5f2606b 99770475 method:public grail.shapes.Angle grail.shapes.AvatarClass.getArms() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@3ebff828 1052768296 method:public grail.shapes.LineClass grail.shapes.Angle.getLeftLine() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@33352f32 859123506 method:public int grail.shapes.LineClass.getWidth() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@33352f32 859123506 method:public int grail.shapes.LineClass.getHeight() args:[]timeOut:2000\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getLancelot() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneLancelotScaleLeftArmTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneGalahadScaleLeftArmTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getGalahad() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@2cf23c81 754072705 method:public grail.shapes.Angle grail.shapes.AvatarClass.getArms() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@35fe2125 905847077 method:public grail.shapes.LineClass grail.shapes.Angle.getLeftLine() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@34645867 878991463 method:public int grail.shapes.LineClass.getWidth() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@34645867 878991463 method:public int grail.shapes.LineClass.getHeight() args:[]timeOut:2000\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getGalahad() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneGalahadScaleLeftArmTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneRobinScaleLeftArmTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getRobin() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@1255b1d1 307605969 method:public grail.shapes.Angle grail.shapes.AvatarClass.getArms() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@7c22d4f 130166095 method:public grail.shapes.LineClass grail.shapes.Angle.getLeftLine() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@60bdf15d 1623060829 method:public int grail.shapes.LineClass.getWidth() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@60bdf15d 1623060829 method:public int grail.shapes.LineClass.getHeight() args:[]timeOut:2000\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getRobin() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.scale.others.BridgeSceneRobinScaleLeftArmTestCase: 0.0\n### gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleRightLegTestCase: 1.0\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\nCalling on object grail.shapes.AvatarClass@1c98290c 479734028 method:public grail.shapes.Angle grail.shapes.AvatarClass.getLegs() args:[]timeOut:2000\nCalling on object grail.shapes.Angle@46e8a539 1189651769 method:public grail.shapes.LineClass grail.shapes.Angle.getRightLine() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@5fd62371 1607869297 method:public int grail.shapes.LineClass.getWidth() args:[]timeOut:2000\nCalling on object grail.shapes.LineClass@5fd62371 1607869297 method:public int grail.shapes.LineClass.getHeight() args:[]timeOut:2000\nCalling on object grail.shapes.AllFiveGuys@53ab0286 1403716230 method:public grail.shapes.AvatarClass grail.shapes.AllFiveGuys.getArthur() args:[]timeOut:2000\n### gradingTools.comp401f16.assignment5.testcases.scale.arthur.BridgeSceneArthurScaleRightLegTestCase: 0.0\n","feature":{"manual":false,"extraCredit":true,"name":"BridgeSceneComponentScaleSuite","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"BridgeSceneComponentScaleSuite                         %.1f / 10.0 (Extra credit)"},"validate":false,"restriction":false,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":false,"selected":false,"manual":false,"max":10.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-BridgeSceneComponentScaleSuite.txt"},{"featureName":"Public methods are in implemented interfaces","score":6.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Public methods are in implemented interfaces.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Public methods are in implemented interfaces.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Public methods are in implemented interfaces.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- classHasAtLeastOneInterface: (SpeechText.java:1) Classes with public instance methods should implement interfaces\nclassHasAtLeastOneInterface: (Bean.java:1) Classes with public instance methods should implement interfaces\n\n","resultFormat":"Public methods are in implemented interfaces           %.1f / 10.0","output":"*****************************(Public methods are in implemented interfaces)*****************************\n### Interfaces defined: 0.6\n","feature":{"manual":false,"extraCredit":false,"name":"Public methods are in implemented interfaces","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Public methods are in implemented interfaces           %.1f / 10.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":true,"selected":false,"manual":false,"max":10.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Public methods are in implemented interfaces.txt"},{"featureName":"Move methods defined in Angle and Avatar","score":0.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Move methods defined in Angle and Avatar.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Move methods defined in Angle and Avatar.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Move methods defined in Angle and Avatar.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- expectedDeclaredSignatures: (Angle.java:7) In type Angle, missing declared signature: @move:int;int->void\n\n  -- expectedDeclaredSignatures: (AvatarClass.java:6) In type AvatarClass, missing declared signature: @move:int;int->void\n\n","resultFormat":"Move methods defined in Angle and Avatar               %.1f / 10.0","output":"*****************************(Move methods defined in Angle and Avatar)*****************************\n### Angle!@move:int;int->void: 0.0\n### Avatar!@move:int;int->void: 0.0\n","feature":{"manual":false,"extraCredit":false,"name":"Move methods defined in Angle and Avatar","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Move methods defined in Angle and Avatar               %.1f / 10.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":false,"selected":false,"manual":false,"max":10.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Move methods defined in Angle and Avatar.txt"},{"featureName":"Sleep called in animation","score":0.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Sleep called in animation.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Sleep called in animation.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Sleep called in animation.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- /Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Submission attachment(s)/Assignment5/Assignment5/src/main/Assignment5.java:1: warning: missingMethodCall: (Assignment5.java:1) has not made expected call         ThreadSupport!sleep:long->void\n\n","resultFormat":"Sleep called in animation                              %.1f /  2.0","output":"*****************************(Sleep called in animation)*****************************\n### main.Assignment5!ThreadSupport!sleep:long->void: 0.0\n","feature":{"manual":false,"extraCredit":false,"name":"Sleep called in animation","points":2.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Sleep called in animation                              %.1f /  2.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":false,"selected":false,"manual":false,"max":2.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Sleep called in animation.txt"},{"featureName":"Scale method defined in avatar","score":10.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Scale method defined in avatar.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Scale method defined in avatar.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Scale method defined in avatar.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Scale method defined in avatar                         %.1f / 10.0","output":"*****************************(Scale method defined in avatar)*****************************\n### Avatar!scale:double->void: 1.0\n","feature":{"manual":false,"extraCredit":false,"name":"Scale method defined in avatar","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Scale method defined in avatar                         %.1f / 10.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":false,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":false,"fullCredit":true,"partialCredit":false,"selected":false,"manual":false,"max":10.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Scale method defined in avatar.txt"},{"featureName":"Proper classes instantiated within each other","score":6.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Proper classes instantiated within each other.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Proper classes instantiated within each other.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Proper classes instantiated within each other.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Proper classes instantiated within each other          %.1f /  6.0","output":"*****************************(Proper classes instantiated within each other)*****************************\n### main.Assignment5!BridgeScene: 1.0\n### BridgeScene!Avatar: 1.0\n### Avatar!Angle: 1.0\n","feature":{"manual":false,"extraCredit":false,"name":"Proper classes instantiated within each other","points":6.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Proper classes instantiated within each other          %.1f /  6.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":false,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":false,"fullCredit":true,"partialCredit":false,"selected":false,"manual":false,"max":6.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Proper classes instantiated within each other.txt"},{"featureName":"Required constructors defined for graphical classes","score":6.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Required constructors defined for graphical classes.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Required constructors defined for graphical classes.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Required constructors defined for graphical classes.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- expectedConstructors: (Angle.java:7) In type Angle, missing constructor: :\n\n","resultFormat":"Required constructors defined for graphical classes    %.1f /  9.0","output":"*****************************(Required constructors defined for graphical classes)*****************************\n### Angle!:: 0.0\n### Avatar!:@IMAGE_PATTERN: 1.0\n### BridgeScene!:: 1.0\n","feature":{"manual":false,"extraCredit":false,"name":"Required constructors defined for graphical classes","points":9.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Required constructors defined for graphical classes    %.1f /  9.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":true,"selected":false,"manual":false,"max":9.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Required constructors defined for graphical classes.txt"},{"featureName":"Graphical classes have proper properties defined","score":33.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Graphical classes have proper properties defined.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Graphical classes have proper properties defined.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Graphical classes have proper properties defined.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Graphical classes have proper properties defined       %.1f / 33.0","output":"*****************************(Graphical classes have proper properties defined)*****************************\n### Angledefines getter for property LeftLine: 1.0\n### Angledefines getter for property RightLine: 1.0\n### Avatardefines getter for property Text: 1.0\n### Avatardefines getter for property Head: 1.0\n### Avatardefines getter for property Arms: 1.0\n### Avatardefines getter for property Legs: 1.0\n### BridgeScenedefines getter for property Arthur: 1.0\n### BridgeScenedefines getter for property Galahad: 1.0\n### BridgeScenedefines getter for property Lancelot: 1.0\n### BridgeScenedefines getter for property Robin: 1.0\n### BridgeScenedefines getter for property Guard: 1.0\n","feature":{"manual":false,"extraCredit":false,"name":"Graphical classes have proper properties defined","points":33.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Graphical classes have proper properties defined       %.1f / 33.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":false,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":false,"fullCredit":true,"partialCredit":false,"selected":false,"manual":false,"max":33.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Graphical classes have proper properties defined.txt"},{"featureName":"Elements in animation are properly connected.","score":0.0,"graded":false,"autoGradable":false,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Elements in animation are properly connected..txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Elements in animation are properly connected..txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Elements in animation are properly connected..txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Elements in animation are properly connected.          %.1f / 10.0","output":"","feature":{"manual":true,"extraCredit":false,"name":"Elements in animation are properly connected.","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Elements in animation are properly connected.          %.1f / 10.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":false,"autoNotGraded":false,"manualWithNotFullCredit":true,"manualOverride":false,"fullCredit":false,"partialCredit":false,"selected":false,"manual":true,"max":10.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Elements in animation are properly connected..txt"},{"featureName":"Animation shows proper use of move function.","score":0.0,"graded":false,"autoGradable":false,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Animation shows proper use of move function..txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Animation shows proper use of move function..txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Animation shows proper use of move function..txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Animation shows proper use of move function.           %.1f / 10.0","output":"","feature":{"manual":true,"extraCredit":false,"name":"Animation shows proper use of move function.","points":10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Animation shows proper use of move function.           %.1f / 10.0"},"validate":false,"restriction":false,"autoWithNotFullCredit":false,"autoNotGraded":false,"manualWithNotFullCredit":true,"manualOverride":false,"fullCredit":false,"partialCredit":false,"selected":false,"manual":true,"max":10.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Animation shows proper use of move function..txt"},{"featureName":"Animation shows proper scaling","score":0.0,"graded":false,"autoGradable":false,"extraCredit":true,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Animation shows proper scaling.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Animation shows proper scaling.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Animation shows proper scaling.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Animation shows proper scaling                         %.1f /  7.0 (Extra credit)","output":"","feature":{"manual":true,"extraCredit":true,"name":"Animation shows proper scaling","points":7.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Animation shows proper scaling                         %.1f /  7.0 (Extra credit)"},"validate":false,"restriction":false,"autoWithNotFullCredit":false,"autoNotGraded":false,"manualWithNotFullCredit":true,"manualOverride":false,"fullCredit":false,"partialCredit":false,"selected":false,"manual":true,"max":7.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Animation shows proper scaling.txt"},{"featureName":"Animation shows proper arm rotation","score":0.0,"graded":false,"autoGradable":false,"extraCredit":true,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Animation shows proper arm rotation.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Animation shows proper arm rotation.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Animation shows proper arm rotation.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Animation shows proper arm rotation                    %.1f /  8.0 (Extra credit)","output":"","feature":{"manual":true,"extraCredit":true,"name":"Animation shows proper arm rotation","points":8.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Animation shows proper arm rotation                    %.1f /  8.0 (Extra credit)"},"validate":false,"restriction":false,"autoWithNotFullCredit":false,"autoNotGraded":false,"manualWithNotFullCredit":true,"manualOverride":false,"fullCredit":false,"partialCredit":false,"selected":false,"manual":true,"max":8.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Animation shows proper arm rotation.txt"},{"featureName":"Variables should have interface, not class, type","score":-10.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Variables should have interface, not class, type.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Variables should have interface, not class, type.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Variables should have interface, not class, type.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- variableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function arthur\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function galahad\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function guard\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function lancelot\nvariableHasClassType: (AllFiveGuys.java:12) Class AvatarClass rather than interface used as the type of variable/function robin\nvariableHasClassType: (AllFiveGuys.java:29) Class AvatarClass rather than interface used as the type of variable/function getGuard\nvariableHasClassType: (AllFiveGuys.java:32) Class AvatarClass rather than interface used as the type of variable/function getArthur\nvariableHasClassType: (AllFiveGuys.java:35) Class AvatarClass rather than interface used as the type of variable/function getLancelot\nvariableHasClassType: (AllFiveGuys.java:38) Class AvatarClass rather than interface used as the type of variable/function getRobin\nvariableHasClassType: (AllFiveGuys.java:41) Class AvatarClass rather than interface used as the type of variable/function getGalahad\nvariableHasClassType: (AllFiveGuysInterface.java:4) Class AvatarClass rather than interface used as the type of variable/function getGuard\nvariableHasClassType: (AllFiveGuysInterface.java:5) Class AvatarClass rather than interface used as the type of variable/function getArthur\nvariableHasClassType: (AllFiveGuysInterface.java:6) Class AvatarClass rather than interface used as the type of variable/function getLancelot\nvariableHasClassType: (AllFiveGuysInterface.java:7) Class AvatarClass rather than interface used as the type of variable/function getRobin\nvariableHasClassType: (AllFiveGuysInterface.java:8) Class AvatarClass rather than interface used as the type of variable/function getGalahad\nvariableHasClassType: (AvatarClass.java:11) Class Angle rather than interface used as the type of variable/function arms\nvariableHasClassType: (AvatarClass.java:11) Class Angle rather than interface used as the type of variable/function legs\nvariableHasClassType: (AvatarClass.java:31) Class Angle rather than interface used as the type of variable/function getArms\nvariableHasClassType: (AvatarClass.java:34) Class Angle rather than interface used as the type of variable/function getLegs\nvariableHasClassType: (AvatarClassInterface.java:5) Class Angle rather than interface used as the type of variable/function getArms\nvariableHasClassType: (AvatarClassInterface.java:8) Class Angle rather than interface used as the type of variable/function getLegs\nvariableHasClassType: (AvatarClass.java:10) Class HeadPictures rather than interface used as the type of variable/function headTest\nvariableHasClassType: (AvatarClass.java:28) Class HeadPictures rather than interface used as the type of variable/function getHead\nvariableHasClassType: (AvatarClassInterface.java:4) Class HeadPictures rather than interface used as the type of variable/function getHead\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine1\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine2\nvariableHasClassType: (Angle.java:12) Class LineClass rather than interface used as the type of variable/function testLine3\nvariableHasClassType: (Angle.java:20) Class LineClass rather than interface used as the type of variable/function getLeftLine\nvariableHasClassType: (Angle.java:23) Class LineClass rather than interface used as the type of variable/function getRightLine\nvariableHasClassType: (AvatarClass.java:12) Class LineClass rather than interface used as the type of variable/function body\nvariableHasClassType: (AvatarClass.java:37) Class LineClass rather than interface used as the type of variable/function getBody\nvariableHasClassType: (AvatarClassInterface.java:6) Class LineClass rather than interface used as the type of variable/function getBody\nvariableHasClassType: (Angle.java:15) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (Angle.java:26) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (AvatarClass.java:13) Class Point rather than interface used as the type of variable/function bodyPoint\nvariableHasClassType: (AvatarClass.java:14) Class Point rather than interface used as the type of variable/function armsPoint\nvariableHasClassType: (AvatarClass.java:15) Class Point rather than interface used as the type of variable/function legsPoint\nvariableHasClassType: (AvatarClass.java:45) Class Point rather than interface used as the type of variable/function point\nvariableHasClassType: (AvatarClassInterface.java:9) Class Point rather than interface used as the type of variable/function point\nvariableHasClassType: (LineClass.java:10) Class Point rather than interface used as the type of variable/function location\nvariableHasClassType: (LineClass.java:12) Class Point rather than interface used as the type of variable/function initialLocation\nvariableHasClassType: (LineClass.java:18) Class Point rather than interface used as the type of variable/function getLocation\nvariableHasClassType: (LineClass.java:21) Class Point rather than interface used as the type of variable/function newLocation\nvariableHasClassType: (LineClassInterface.java:4) Class Point rather than interface used as the type of variable/function getLocation\nvariableHasClassType: (LineClassInterface.java:5) Class Point rather than interface used as the type of variable/function newLocation\nvariableHasClassType: (AvatarClass.java:16) Class SpeechText rather than interface used as the type of variable/function newText\nvariableHasClassType: (AvatarClass.java:40) Class SpeechText rather than interface used as the type of variable/function getStringShape\nvariableHasClassType: (AvatarClassInterface.java:7) Class SpeechText rather than interface used as the type of variable/function getStringShape\nvariableHasClassType: (VAngleShapeInterface.java:4) Class LineClass rather than interface used as the type of variable/function getLeftLine\nvariableHasClassType: (VAngleShapeInterface.java:5) Class LineClass rather than interface used as the type of variable/function getRightLine\nvariableHasClassType: (VAngleShapeInterface.java:6) Class Point rather than interface used as the type of variable/function pointTheLinesMeet\nvariableHasClassType: (MainClass.java:21) Class Bean rather than interface used as the type of variable/function bean\n\n","resultFormat":"Variables should have interface, not class, type%.1f /  -10.0","output":"","feature":{"manual":false,"extraCredit":false,"name":"Variables should have interface, not class, type","points":-10.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Variables should have interface, not class, type%.1f /  -10.0"},"validate":false,"restriction":true,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":false,"selected":false,"manual":false,"max":-10.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Variables should have interface, not class, type.txt"},{"featureName":"No magic numbers","score":-5.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/No magic numbers.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-No magic numbers.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-No magic numbers.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"  -- magic.number: (AllFiveGuys.java:21) In type AllFiveGuys, magic number 200 in expression list EXPR null , EXPR 200 , EXPR 0 \nmagic.number: (AllFiveGuys.java:22) In type AllFiveGuys, magic number -200 in expression list 200 \nmagic.number: (AllFiveGuys.java:23) In type AllFiveGuys, magic number 400 in expression list EXPR null , EXPR 400 , EXPR 0 \nmagic.number: (AllFiveGuys.java:24) In type AllFiveGuys, magic number 600 in expression list EXPR null , EXPR 600 , EXPR 0 \nmagic.number: (Angle.java:16) In type Angle, magic number 75 in expression list EXPR pointTheLinesMeet , EXPR 75 , EXPR 75 \nmagic.number: (Angle.java:17) In type Angle, magic number -75 in expression list 75 \nmagic.number: (Angle.java:17) In type Angle, magic number 75 in expression list EXPR pointTheLinesMeet , EXPR - 75 , EXPR 75 \nmagic.number: (AvatarClass.java:20) In type AvatarClass, magic number 100 in expression list EXPR jpeg , EXPR 250 , EXPR 100 , EXPR 100 , EXPR 100 \nmagic.number: (AvatarClass.java:20) In type AvatarClass, magic number 250 in expression list EXPR jpeg , EXPR 250 , EXPR 100 , EXPR 100 , EXPR 100 \nmagic.number: (AvatarClass.java:23) In type AvatarClass, magic number 100 in expression list EXPR bodyPoint , EXPR 0 , EXPR 100 \nmagic.number: (AvatarClass.java:24) In type AvatarClass, magic number 450 in expression list EXPR \"Arthur takes a Walk\" , EXPR 450 , EXPR 50 \nmagic.number: (AvatarClass.java:24) In type AvatarClass, magic number 50 in expression list EXPR \"Arthur takes a Walk\" , EXPR 450 , EXPR 50 \nmagic.number: (Assignment5.java:14) In type Assignment5, magic number 1000 in expression list EXPR 1000 , EXPR 400 \nmagic.number: (Assignment5.java:14) In type Assignment5, magic number 400 in expression list EXPR 1000 , EXPR 400 \nmagic.number: (Assignment5.java:17) In type Assignment5, magic number 110 in expression list 110 \nmagic.number: (Assignment5.java:18) In type Assignment5, magic number 50 in expression list EXPR 50 \nmagic.number: (Assignment5.java:19) In type Assignment5, magic number 50 in expression list 50 \nmagic.number: (Assignment5.java:20) In type Assignment5, magic number 10 in expression list EXPR null , EXPR 10 , EXPR 0 \nmagic.number: (Assignment5.java:23) In type Assignment5, magic number 10 in expression list EXPR null , EXPR 10 , EXPR 0 \nmagic.number: (MainClass.java:23) In type MainClass, magic number 3000 in expression list EXPR 3000 \nmagic.number: (MainClass.java:26) In type MainClass, magic number 3000 in expression list EXPR 3000 \nmagic.number: (MainClass.java:29) In type MainClass, magic number 3000 in expression list EXPR 3000 \n\n","resultFormat":"No magic numbers                            %.1f /  -5.0","output":"","feature":{"manual":false,"extraCredit":false,"name":"No magic numbers","points":-5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"No magic numbers                            %.1f /  -5.0"},"validate":false,"restriction":true,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":false,"selected":false,"manual":false,"max":-5.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-No magic numbers.txt"},{"featureName":"Interactive Run","score":-5.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Interactive Run.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Interactive Run.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Interactive Run.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Interactive Run                             %.1f /  -5.0","output":"","feature":{"manual":true,"extraCredit":false,"name":"Interactive Run","points":-5.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Interactive Run                             %.1f /  -5.0"},"validate":false,"restriction":true,"autoWithNotFullCredit":true,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":true,"fullCredit":false,"partialCredit":false,"selected":false,"manual":false,"max":-5.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Interactive Run.txt"},{"featureName":"Illegal import or call","score":0.0,"graded":true,"autoGradable":true,"extraCredit":false,"featureChecker":{"overridable":false},"feedbackFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Illegal import or call.txt","manualNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/ManualNotes-Illegal import or call.txt","autoNotesFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/AutoNotes-Illegal import or call.txt","outputFiles":null,"inputFiles":[],"linkedFeature":null,"manualNotes":"","autoNotes":"","resultFormat":"Illegal import or call                      %.1f /  -25.0","output":"","feature":{"manual":false,"extraCredit":false,"name":"Illegal import or call","points":-25.0,"permissions":[{"name":".","actions":"read,write"}],"summary":"Illegal import or call                      %.1f /  -25.0"},"validate":false,"restriction":true,"autoWithNotFullCredit":false,"autoNotGraded":false,"manualWithNotFullCredit":false,"manualOverride":false,"fullCredit":true,"partialCredit":false,"selected":false,"manual":false,"max":-25.0,"resultFileName":"/Users/andrewwg94/401 TA '16/Assignments/Assignment 5/Cui, Lily(yinglinc)/Feedback Attachment(s)/Results-Illegal import or call.txt"}],"sourceCodeTAComments":""}