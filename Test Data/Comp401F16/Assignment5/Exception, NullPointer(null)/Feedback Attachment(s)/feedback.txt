Grading result for: Huang, Cunyuan(hcuny)

Grading features...
----------------------------------
AngleMoveSuite                                         10.0 / 20.0
BridgeSceneArthurScaleHeadTestCase                     0.0 /  5.0 (Extra credit)
BridgeSceneComponentMoveSuite                          20.0 / 40.0
BridgeSceneComponentScaleSuite                         0.0 / 10.0 (Extra credit)
Public methods are in implemented interfaces           4.0 / 10.0
Move methods defined in Angle and Avatar               10.0 / 10.0
Sleep called in animation                              2.0 /  2.0
Scale method defined in avatar                         10.0 / 10.0
Proper classes instantiated within each other          6.0 /  6.0
Required constructors defined for graphical classes    6.0 /  9.0
Graphical classes have proper properties defined       30.0 / 33.0
Elements in animation are properly connected.          10.0 / 10.0
Animation shows proper use of move function.           10.0 / 10.0
Animation shows proper scaling                         7.0 /  7.0 (Extra credit)
Animation shows proper arm rotation                    8.0 /  8.0 (Extra credit)
----------------------------------
  Points Awarded: 133.0

Grading restrictions...
----------------------------------
Variables should have interface, not class, type-10.0 /  -10.0
Interactive Run                             0.0 /  -5.0
Illegal import or call                      0.0 /  -25.0
----------------------------------
  Points Deducted: -10.0

  Features Score: 123.0

Notes from grading features:
----------------------------------
AngleMoveSuite:
  -- java.lang.NullPointerException null
  -- java.lang.NullPointerException null

BridgeSceneArthurScaleHeadTestCase:
  -- java.lang.NullPointerException null

BridgeSceneComponentMoveSuite:
  -- In: grail.RotatingLine@173797f0 computedX 100 != correctX 112
  -- In: grail.RotatingLine@5eed2d86 computedX 100 != correctX 112
  -- In: grail.RotatingLine@1e141e42 computedX 300 != correctX 312
  -- In: grail.RotatingLine@73fc518f computedX 300 != correctX 312
  -- In: grail.RotatingLine@151ef57f computedX 112 != correctX 124
  -- In: grail.AHeadImage@5524b72f computedX 124 != correctX 136
  -- Method matching getStringShape not found in class: class mp.Avatar

BridgeSceneComponentScaleSuite:
  -- java.lang.NullPointerException null
  -- java.lang.NullPointerException null
  -- java.lang.NullPointerException null
  -- java.lang.NullPointerException null
  -- java.lang.NullPointerException null

Public methods are in implemented interfaces:
  -- classHasAtLeastOneInterface: (Angle.java:1) Classes with public instance methods should implement interfaces
classHasAtLeastOneInterface: (Avatar.java:1) Classes with public instance methods should implement interfaces
classHasAtLeastOneInterface: (BridgeScene.java:1) Classes with public instance methods should implement interfaces


Required constructors defined for graphical classes:
  -- expectedConstructors: (Avatar.java:10) In type Avatar, missing constructor: :@IMAGE_PATTERN


Graphical classes have proper properties defined:
  -- expectedGetters: (Avatar.java:1) In type Avatar, missing getter for property Head of type @IMAGE_PATTERN



Notes from grading restrictions:
----------------------------------
Variables should have interface, not class, type:
  -- variableHasClassType: (Angle.java:12) Class RotatingLine rather than interface used as the type of variable/function LeftLine
variableHasClassType: (Angle.java:12) Class RotatingLine rather than interface used as the type of variable/function RightLine
variableHasClassType: (Angle.java:27) Class RotatingLine rather than interface used as the type of variable/function getLeftLine
variableHasClassType: (Angle.java:30) Class RotatingLine rather than interface used as the type of variable/function getRightLine
variableHasClassType: (RotatingLine.java:12) Class APolarPoint rather than interface used as the type of variable/function lowerRightCorner
variableHasClassType: (Avatar.java:13) Class AHeadImage rather than interface used as the type of variable/function head
variableHasClassType: (Avatar.java:14) Class Angle rather than interface used as the type of variable/function arms
variableHasClassType: (Avatar.java:14) Class Angle rather than interface used as the type of variable/function legs
variableHasClassType: (Avatar.java:15) Class RotatingLine rather than interface used as the type of variable/function neck
variableHasClassType: (Avatar.java:15) Class RotatingLine rather than interface used as the type of variable/function torso
variableHasClassType: (Avatar.java:16) Class AStringShape rather than interface used as the type of variable/function text
variableHasClassType: (Avatar.java:46) Class AHeadImage rather than interface used as the type of variable/function getHead
variableHasClassType: (Avatar.java:49) Class Angle rather than interface used as the type of variable/function getArms
variableHasClassType: (Avatar.java:52) Class RotatingLine rather than interface used as the type of variable/function getTorso
variableHasClassType: (Avatar.java:55) Class RotatingLine rather than interface used as the type of variable/function getNeck
variableHasClassType: (Avatar.java:58) Class Angle rather than interface used as the type of variable/function getLegs
variableHasClassType: (Avatar.java:61) Class AStringShape rather than interface used as the type of variable/function getText
variableHasClassType: (Assignment5.java:15) Class BridgeScene rather than interface used as the type of variable/function bridgescene
variableHasClassType: (BridgeScene.java:12) Class Avatar rather than interface used as the type of variable/function arthur
variableHasClassType: (BridgeScene.java:12) Class Avatar rather than interface used as the type of variable/function galahad
variableHasClassType: (BridgeScene.java:12) Class Avatar rather than interface used as the type of variable/function guard
variableHasClassType: (BridgeScene.java:12) Class Avatar rather than interface used as the type of variable/function lancelot
variableHasClassType: (BridgeScene.java:12) Class Avatar rather than interface used as the type of variable/function robin
variableHasClassType: (BridgeScene.java:22) Class Avatar rather than interface used as the type of variable/function getArthur
variableHasClassType: (BridgeScene.java:25) Class Avatar rather than interface used as the type of variable/function getLancelot
variableHasClassType: (BridgeScene.java:28) Class Avatar rather than interface used as the type of variable/function getRobin
variableHasClassType: (BridgeScene.java:31) Class Avatar rather than interface used as the type of variable/function getGalahad
variableHasClassType: (BridgeScene.java:34) Class Avatar rather than interface used as the type of variable/function getGuard



Late penalty: 95.0%

Overall Comments:
----------------------------------
Incorret names/tags----------------------------------
  Total Score: 116.85
