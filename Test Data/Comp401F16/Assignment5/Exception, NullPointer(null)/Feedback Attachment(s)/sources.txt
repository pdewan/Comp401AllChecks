//START OF FILE: src/grail/aheadimage.java
package grail;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import javax.swing.Icon;
import javax.swing.ImageIcon;
@StructurePattern(StructurePatternNames.LABEL_PATTERN)
public class AHeadImage implements HeadImage {
	String imageFileName;
    int x, y, height, width;
     
    public AHeadImage(String initImageFileName, int initX, int initY) {
    	imageFileName = initImageFileName;
    	Icon icon = new ImageIcon(imageFileName);
        height = icon.getIconHeight();
        width = icon.getIconWidth();
    	x = initX;
    	y = initY;    
    }
    
    public int getX() {
    	return x;
    }
 	public void setX(int newX) {
 		x = newX;
 	}
 	public int getY() { 
 		return y; 
 	}
 	public void setY(int newY) {
 		y = newY;
 	}
 	public int getHeight() { 
 		return height; 
 	}
 	public int getWidth() {
 		return width;
 	}
    public String getImageFileName() {
    	return imageFileName;
    }  
    public void setImageFileName(String newVal) {
    	imageFileName = newVal;
    }     

}
//END OF FILE
//START OF FILE: src/grail/apolarpoint.java
package grail;

public class APolarPoint implements Point {
	 double radius, angle;
	 public APolarPoint(double theRadius, double theAngle) {
		radius = theRadius;
	 	angle = theAngle;
	 }
	 public APolarPoint(int theX, int theY) {
		radius = Math.sqrt(theX*theX + theY*theY);
	 	angle = Math.atan((double) theY/theX);
	 }
	 public int getX() { return (int) (radius*Math.cos(angle)); }
	 public int getY() { return (int) (radius*Math.sin(angle)); }
	 public double getAngle() { return angle; }
	 public double getRadius() { return radius; }
}
//END OF FILE
//START OF FILE: src/grail/astringshape.java
package grail;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
@StructurePattern(StructurePatternNames.STRING_PATTERN)
public class AStringShape implements StringShape {
	String text;
	int x, y;
	public AStringShape(String initText, int initX, int initY) {
		text = initText;
		x = initX;
		y = initY;
	}
	public int getX() {
		return x;
	}
	public void setX(int newX) {
		x = newX;
	}
	public int getY() {
		return y;
	}
	public void setY(int newY) {
		y = newY;
	}
	public String getText() {
		return text;
	}
	public void setText(String newVal) {
		text = newVal;
	}

}
//END OF FILE
//START OF FILE: src/grail/angle.java
package grail;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.Tags;
import util.annotations.StructurePattern;

@Tags({"Angle"})
@PropertyNames({"LeftLine", "RightLine"})
@StructurePattern("Bean Pattern")

public class Angle {
	RotatingLine LeftLine, RightLine;
	int length;
	int x, y;
	public Angle(){
		
	}
	public Angle(int xVal, int yVal, int aLength){
		x = xVal;
		y = yVal;
		LeftLine = new RotatingLine(aLength, 135*Math.PI/180);
		RightLine = new RotatingLine(aLength, 45*Math.PI/180);
		LeftLine.setUpperLeftCorner(x, y);
		RightLine.setUpperLeftCorner(x, y);
	}
	
	public RotatingLine getLeftLine(){
		return LeftLine;
	}
	public RotatingLine getRightLine(){
		return RightLine;
	}
	@Tags({"move"})
	public void move(int newX, int newY){
		x += newX;
		y += newY;
		LeftLine.setUpperLeftCorner(x, y);
		RightLine.setUpperLeftCorner(x, y);
	}
}
//END OF FILE
//START OF FILE: src/grail/headimage.java
package grail;
public interface HeadImage{
	public int getX();
 	public void setX(int newX);
 	public int getY();
 	public void setY(int newY);
    public String getImageFileName() ;  
    public void setImageFileName(String newVal);
}
//END OF FILE
//START OF FILE: src/grail/line.java
package grail;

import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.LINE_PATTERN)
@Tags({"Line"})

public interface Line{
	public int getX();
	public int getY();
	public int getWidth();
	public int getHeight();
	public void rotate(int units);
	public void setUpperLeftCorner(int newX, int newY);
}
//END OF FILE
//START OF FILE: src/grail/point.java
package grail;

public interface Point {
	 public int getX();
	 public int getY();
	 public double getAngle();
	 public double getRadius();
}
//END OF FILE
//START OF FILE: src/grail/rotatingline.java
package grail;

import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@StructurePattern(StructurePatternNames.LINE_PATTERN)
@Tags({"RotatingLine"})
public class RotatingLine implements Line {
	int xVal, yVal;
	double radius, angle;
	APolarPoint lowerRightCorner;

	
	public RotatingLine(double aRadius, double anAngle){
		radius = aRadius;
		angle = anAngle;
		lowerRightCorner = new APolarPoint(radius, angle);
	}
	
	public int getX(){
		return xVal;
	}

	public int getY(){
		return yVal;
	}
	
	public double getRadius(){
		return radius;
	}
	
	public double getAngle(){
		return angle;
	}

	public void setUpperLeftCorner(int newX, int newY){
		xVal = newX;
		yVal = newY;
	}
	public int getWidth(){
		return lowerRightCorner.getX();
	}
	public int getHeight(){
		return lowerRightCorner.getY();
	}
	@Tags({"rotate"})
	public void rotate(int units){
		double newerAngle = angle + (units*(Math.PI/32));
		angle = newerAngle;
		lowerRightCorner = new APolarPoint(radius, angle);
		System.out.println(angle);
	}

}
//END OF FILE
//START OF FILE: src/grail/stringshape.java
package grail;

public interface StringShape {
	public int getX();
	public void setX(int newX);
	public int getY();
	public void setY(int newY);
	public String getText();
	public void setText(String newText);
}
//END OF FILE
//START OF FILE: src/main/assignment5.java
package main;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import grail.AHeadImage;
import grail.AStringShape;
import grail.Angle;
import mp.Avatar;
import mp.BridgeScene;
import util.misc.ThreadSupport;

public class Assignment5 {
	public static void main(String[] args){

		BridgeScene bridgescene = new BridgeScene();
		OEFrame editor = ObjectEditor.edit(bridgescene);
		editor.refresh();
		ThreadSupport.sleep(300);
		bridgescene.getGuard().move(100,100);
		editor.refresh();
		ThreadSupport.sleep(300);
		bridgescene.getGuard().getArms().getLeftLine().rotate(4);
		editor.refresh();
		ThreadSupport.sleep(300);
		bridgescene.getArthur().scale(2);
		editor.refresh();
		ThreadSupport.sleep(300);
		bridgescene.getRobin().scale(.5);
		editor.refresh();
		ThreadSupport.sleep(300);
		bridgescene.getGalahad().move(0, 100);
		editor.refresh();
	}
}
//END OF FILE
//START OF FILE: src/mp/avatar.java
package mp;

import util.annotations.Tags;
import grail.AHeadImage;
import grail.AStringShape;
import grail.Angle;
import grail.RotatingLine;
import util.annotations.StructurePattern;

@StructurePattern("Bean Pattern")
@Tags({"Avatar"})
public class Avatar {
	AHeadImage head;
	Angle arms, legs;
	RotatingLine neck, torso;
	AStringShape text;
	private int neckY, bodyX, bodyY, textX, textY, legY, torsoLength, neckLength, armLength, legLength;
	private int x, y;
	String filename, newText;
	
	public Avatar(String aFilename, int newX, int newY, int aTorsoLength, int aNeckLength, String aText, int aArmLength, int aLegLength){
		x = newX;
		y = newY;
		filename = aFilename;
		newText = aText;
		torsoLength = aTorsoLength;
		neckLength = aNeckLength;
		armLength = aArmLength;
		legLength = aLegLength;
		head = new AHeadImage(filename, x, y);
		neckY = y + head.getHeight();
		bodyX = x + head.getWidth()/2;
		bodyY = y + neckLength + head.getHeight();
		textX = x + head.getWidth();
		textY = y;
		neck = new RotatingLine(neckLength, 90*Math.PI/180);
		neck.setUpperLeftCorner(bodyX, neckY);
		arms = new Angle(bodyX, bodyY, armLength);
		torso = new RotatingLine(torsoLength, 90*Math.PI/180);
		torso.setUpperLeftCorner(bodyX, bodyY);
		legY = bodyY + torsoLength;
		legs = new Angle(bodyX, legY, legLength);
		text = new AStringShape(newText, textX, textY);
	}
	
	public AHeadImage getHead(){
		return head;
	}
	public Angle getArms(){
		return arms;
	}
	public RotatingLine getTorso(){
		return torso;
	}
	public RotatingLine getNeck(){
		return neck;
	}
	public Angle getLegs(){
		return legs;
	}
	public AStringShape getText(){
		return text;
	}
	@Tags({"move"})
	public void move(int moveX, int moveY){

		x = x + moveX;
		y = y + moveY;
		head = new AHeadImage(filename, x, y);
		neckY = y + head.getHeight();
		bodyX = x + head.getWidth()/2;
		bodyY = y + neckLength + head.getHeight();
		textX = x + head.getWidth();
		textY = y;
		neck = new RotatingLine(neckLength, 90*Math.PI/180);
		neck.setUpperLeftCorner(bodyX, neckY);
		arms = new Angle(bodyX, bodyY, armLength);
		torso = new RotatingLine(torsoLength, 90*Math.PI/180);
		torso.setUpperLeftCorner(bodyX, bodyY);
		legY = bodyY + torsoLength;
		legs = new Angle(bodyX, legY, legLength);
		text = new AStringShape(newText, textX, textY);
	}
	@Tags({"scale"})
	public void scale(double newScale){

		torsoLength *= newScale;
		neckLength *= newScale;
		armLength *= newScale;
		legLength *= newScale;
		head = new AHeadImage(filename, x, y);
		neckY = y + head.getHeight();
		bodyX = x + head.getWidth()/2;
		bodyY = y + neckLength + head.getHeight();
		textX = x + head.getWidth();
		textY = y;
		neck = new RotatingLine(neckLength, 90*Math.PI/180);
		neck.setUpperLeftCorner(bodyX, neckY);
		arms = new Angle(bodyX, bodyY, armLength);
		torso = new RotatingLine(torsoLength, 90*Math.PI/180);
		torso.setUpperLeftCorner(bodyX, bodyY);
		legY = bodyY + torsoLength;
		legs = new Angle(bodyX, legY, legLength);
		text = new AStringShape(newText, textX, textY);
	}
}
//END OF FILE
//START OF FILE: src/mp/bridgescene.java
package mp;
import util.annotations.Tags;
import grail.AHeadImage;
import grail.AStringShape;
import grail.Angle;
import grail.RotatingLine;
import util.annotations.StructurePattern;

@StructurePattern("Bean Pattern")
@Tags({"BridgeScene"})
public class BridgeScene {
	private Avatar arthur, lancelot, robin, galahad, guard;
	
	public BridgeScene(){
		arthur = new Avatar("arthur.jpg", 100, 100, 75, 20, "Arthur is my name.", 75, 75);
		lancelot = new Avatar("lancelot.jpg", 100, 400, 75, 20, "Lancelot is my name.", 75, 75);
		robin = new Avatar("robin.jpg", 300, 100, 75, 20, "Robin is my name.", 75, 75);
		galahad = new Avatar("galahad.jpg", 300, 400, 75, 20, "Galahad is my name.", 75, 75);
		guard = new Avatar("guard.jpg", 500, 250, 75, 20, "I am a guard", 75, 75);
	}
	
	public Avatar getArthur(){
		return arthur;
	}
	public Avatar getLancelot(){
		return lancelot;
	}
	public Avatar getRobin(){
		return robin;
	}
	public Avatar getGalahad(){
		return galahad;
	}
	public Avatar getGuard(){
		return guard;
	}
}
//END OF FILE
