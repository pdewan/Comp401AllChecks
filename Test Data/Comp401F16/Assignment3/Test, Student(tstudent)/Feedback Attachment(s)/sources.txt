//START OF FILE: src/main/ascannerbean.java
package main;


import java.util.Iterator;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"ScannerBean"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"ScannedString"})
@EditablePropertyNames({"ScannedString"})

public class AScannerBean implements ScannerBean{
	private String scannedString;
	private Iterator<Token> scanner;
	
	public AScannerBean(){
		scanner = new ATokenScanner();
	}
	
	private void printLine(){
		((ATokenScanner) scanner).setScannedString(scannedString);
		while(scanner.hasNext()){
			Token token = scanner.next();
			if(token == null){break;}
			System.out.println(token);
			System.out.println(token.getInput());
			if(token instanceof IntValueToken){System.out.println(((IntValueToken) token).getValue());}
			if(token instanceof StringValueToken){System.out.println(((StringValueToken) token).getValue());}
		}
	}
	
	@Override
	public String getScannedString() {
		return scannedString;
	}

	@Override
	public void setScannedString(String scannedString) {
		this.scannedString = scannedString;
		printLine();
	}

}
//END OF FILE
//START OF FILE: src/main/atokenscanner.java
package main;

public class ATokenScanner implements TokenScanner{
	private String scannedString;
	
	public void setScannedString(String scannedString){
		this.scannedString = " " + scannedString;
	}
	
	@Override
	public boolean hasNext() {
		return scannedString.length() > 0;
	}

	@Override
	public Token next() {
		Token token = null;
		int tokenLength = 1;
		
		while(scannedString.length() > 1){
			char character = scannedString.charAt(1);
			if(character == '"'){
				tokenLength = getTokenLength('"');
				String tokenString = scannedString.substring(2, tokenLength);
				token = new QuoteToken(tokenString);
			}else if(Character.isLetter(character)){
				tokenLength = getTokenLength(' ');
				String tokenString = scannedString.substring(1, tokenLength);
				token = new WordToken(tokenString);
			}else if(Character.isDigit(character)){
				tokenLength = getTokenLength(' ');
				String tokenString = scannedString.substring(1, tokenLength);
				token = new NumberToken(tokenString);
			}else if(character == ' '){
				int length = 1;
				if(token != null) {length = token.getInput().length();}
				scannedString = scannedString.substring(length, scannedString.length());
				continue;
			}else{
				tokenLength = 1;
				if(character == '{') {token = new StartToken(character + "");}
				if(character == '}') {token = new EndToken(character + "");}
				if(character == '+') {token = new PlusToken(character + "");}
				if(character == '-') {token = new MinusToken(character + "");}
			}
			
			scannedString = scannedString.substring(tokenLength, scannedString.length());
			break;
		}
		if(token == null) {return null;}
		return token;
	}
	
	private int getTokenLength(char endCharacter){
		int tokenLength = 2;
		while(scannedString.length() > tokenLength){
			if(scannedString.charAt(tokenLength) != endCharacter) {tokenLength++;}
			else {break;}
		}
		if(tokenLength == scannedString.length() && endCharacter == '"') {System.out.println("[ERROR - Missing closing quotation mark]");} 
		return tokenLength;
	}

	@Override
	public String getScannedString() {
		return scannedString;
	}

	@Override
	public void remove() {
		// TODO Auto-generated method stub
		
	}
	
}
//END OF FILE
//START OF FILE: src/main/assignment3.java
package main;

import java.util.Scanner;

public class Assignment3 {
	private Scanner input;
	private ScannerBean scannerBean;
	
	public Assignment3(){
		input = new Scanner(System.in);
		scannerBean = new AScannerBean();
	}
	
	public void run(){
		while(true){
			String line = input.nextLine();
			if(line.charAt(0) == '.'){
				System.out.println(" - Program terminated - ");
				System.exit(-1);
			}
			scannerBean.setScannedString(line);
		}
	}
	
	public static void main(String[] args){
		new Assignment3().run();
	}
}
//END OF FILE
//START OF FILE: src/main/endtoken.java
package main;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"End"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input"})
@EditablePropertyNames({"Input"})
public class EndToken implements Token{
	private String input;
	
	public EndToken(String input){
		setInput(input);
	}

	@Override
	public String getInput() {
		return input;
	}

	@Override
	public void setInput(String input) {
		this.input = input;
	}
}
//END OF FILE
//START OF FILE: src/main/intvaluetoken.java
package main;

public interface IntValueToken {
	public int getValue();
}
//END OF FILE
//START OF FILE: src/main/minustoken.java
package main;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Minus"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input"})
@EditablePropertyNames({"Input"})
public class MinusToken implements Token{
	private String input;

	public MinusToken(String input){
		setInput(input);
	}
	
	@Override
	public String getInput() {
		return input;
	}

	@Override
	public void setInput(String input) {
		this.input = input;
	}

}
//END OF FILE
//START OF FILE: src/main/numbertoken.java
package main;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Number"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})
public class NumberToken implements Token, IntValueToken{
	private String input;
	
	public NumberToken(String input){
		setInput(input);
	}

	@Override
	public String getInput() {
		return input;
	}

	@Override
	public void setInput(String input) {
		this.input = input;
	}

	public int getValue() {
		return Integer.parseInt(input);
	}
}
//END OF FILE
//START OF FILE: src/main/plustoken.java
package main;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Plus"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input"})
@EditablePropertyNames({"Input"})
public class PlusToken implements Token{
	private String input;
	
	public PlusToken(String input){
		setInput(input);
	}
	
	@Override
	public String getInput() {
		return input;
	}

	@Override
	public void setInput(String input) {
		this.input = input;
	}
}
//END OF FILE
//START OF FILE: src/main/quotetoken.java
package main;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Quote"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input"})
@EditablePropertyNames({"Input"})
public class QuoteToken implements Token{
	private String input;

	public QuoteToken(String input){
		setInput(input);
	}
	
	@Override
	public String getInput() {
		return input;
	}

	@Override
	public void setInput(String input) {
		this.input = input;
	}
	
}
//END OF FILE
//START OF FILE: src/main/scannerbean.java
package main;

public interface ScannerBean {
	public String getScannedString();
	public void setScannedString(String scannedString);
}
//END OF FILE
//START OF FILE: src/main/starttoken.java
package main;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Start"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input"})
@EditablePropertyNames({"Input"})

public class StartToken implements Token{
	private String input;
	
	public StartToken(String input){
		setInput(input);
	}

	@Override
	public String getInput() {
		return input;
	}

	@Override
	public void setInput(String input) {
		this.input = input;
	}
	
}
//END OF FILE
//START OF FILE: src/main/stringvaluetoken.java
package main;

public interface StringValueToken {
	public String getValue();
}
//END OF FILE
//START OF FILE: src/main/token.java
package main;

public interface Token {
	public String getInput();
	public void setInput(String input);
}
//END OF FILE
//START OF FILE: src/main/tokenscanner.java
package main;

import java.util.Iterator;

public interface TokenScanner extends Iterator<Token>{
	public void setScannedString(String scannedString);
	public String getScannedString();
}
//END OF FILE
//START OF FILE: src/main/wordtoken.java
package main;

import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;
import util.annotations.Tags;

@Tags({"Word"})
@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"Input", "Value"})
@EditablePropertyNames({"Input"})

public class WordToken implements Token, StringValueToken{
	private String input;
	
	public WordToken(String input){
		setInput(input);
	}
	
	@Override
	public String getInput() {
		return input;
	}
	
	@Override
	public void setInput(String input) {
		this.input = input;
	}
	
	public String getValue() {
		return input.toLowerCase();
	}
	
}
//END OF FILE
